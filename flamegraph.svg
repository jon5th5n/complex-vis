<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="597.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="398"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="0.2513%" y="501" width="0.5025%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.5013%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="0.2513%" y="485" width="0.5025%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.5013%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="0.2513%" y="469" width="0.5025%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.5013%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="0.5025%" y="453" width="0.2513%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.7525%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 1.76%)</title><rect x="0.0000%" y="517" width="1.7588%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="527.50"></text></g><g><title>[unknown] (4 samples, 1.01%)</title><rect x="0.7538%" y="501" width="1.0050%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="4"/><text x="1.0038%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.5075%" y="485" width="0.2513%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="1"/><text x="1.7575%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.5075%" y="469" width="0.2513%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="1"/><text x="1.7575%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.5075%" y="453" width="0.2513%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="1.7575%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.5075%" y="437" width="0.2513%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="1.7575%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.5075%" y="421" width="0.2513%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="1.7575%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 2.01%)</title><rect x="0.0000%" y="533" width="2.0101%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="543.50">[..</text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7588%" y="517" width="0.2513%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="2.0088%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7588%" y="501" width="0.2513%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="2.0088%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="1.7588%" y="485" width="0.2513%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="2.0088%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="2.0101%" y="485" width="0.2513%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="2.2601%" y="495.50"></text></g><g><title>__tunable_get_val (1 samples, 0.25%)</title><rect x="2.0101%" y="469" width="0.2513%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="2.2601%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 0.75%)</title><rect x="2.0101%" y="501" width="0.7538%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="3"/><text x="2.2601%" y="511.50"></text></g><g><title>snprintf (2 samples, 0.50%)</title><rect x="2.2613%" y="485" width="0.5025%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="2"/><text x="2.5113%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="2.2613%" y="469" width="0.5025%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="2"/><text x="2.5113%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="2.2613%" y="453" width="0.5025%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="2"/><text x="2.5113%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="2.5126%" y="437" width="0.2513%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="2.7626%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="7.7889%" y="389" width="0.2513%" height="15" fill="rgb(221,5,38)" fg:x="31" fg:w="1"/><text x="8.0389%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="7.7889%" y="373" width="0.2513%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="1"/><text x="8.0389%" y="383.50"></text></g><g><title>__libc_calloc (1 samples, 0.25%)</title><rect x="7.7889%" y="357" width="0.2513%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="1"/><text x="8.0389%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 1.01%)</title><rect x="7.7889%" y="405" width="1.0050%" height="15" fill="rgb(249,31,29)" fg:x="31" fg:w="4"/><text x="8.0389%" y="415.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="8.0402%" y="389" width="0.7538%" height="15" fill="rgb(225,111,53)" fg:x="32" fg:w="3"/><text x="8.2902%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="8.0402%" y="373" width="0.7538%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="3"/><text x="8.2902%" y="383.50"></text></g><g><title>malloc (3 samples, 0.75%)</title><rect x="8.0402%" y="357" width="0.7538%" height="15" fill="rgb(214,148,48)" fg:x="32" fg:w="3"/><text x="8.2902%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.50%)</title><rect x="8.2915%" y="341" width="0.5025%" height="15" fill="rgb(232,36,49)" fg:x="33" fg:w="2"/><text x="8.5415%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (24 samples, 6.03%)</title><rect x="6.5327%" y="421" width="6.0302%" height="15" fill="rgb(209,103,24)" fg:x="26" fg:w="24"/><text x="6.7827%" y="431.50">[libvulk..</text></g><g><title>pthread_setaffinity_np (15 samples, 3.77%)</title><rect x="8.7940%" y="405" width="3.7688%" height="15" fill="rgb(229,88,8)" fg:x="35" fg:w="15"/><text x="9.0440%" y="415.50">pthr..</text></g><g><title>[unknown] (13 samples, 3.27%)</title><rect x="9.2965%" y="389" width="3.2663%" height="15" fill="rgb(213,181,19)" fg:x="37" fg:w="13"/><text x="9.5465%" y="399.50">[un..</text></g><g><title>[unknown] (13 samples, 3.27%)</title><rect x="9.2965%" y="373" width="3.2663%" height="15" fill="rgb(254,191,54)" fg:x="37" fg:w="13"/><text x="9.5465%" y="383.50">[un..</text></g><g><title>[unknown] (11 samples, 2.76%)</title><rect x="9.7990%" y="357" width="2.7638%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="11"/><text x="10.0490%" y="367.50">[u..</text></g><g><title>[unknown] (7 samples, 1.76%)</title><rect x="10.8040%" y="341" width="1.7588%" height="15" fill="rgb(233,36,39)" fg:x="43" fg:w="7"/><text x="11.0540%" y="351.50"></text></g><g><title>[unknown] (5 samples, 1.26%)</title><rect x="11.3065%" y="325" width="1.2563%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="5"/><text x="11.5565%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="12.5628%" y="421" width="0.2513%" height="15" fill="rgb(245,192,40)" fg:x="50" fg:w="1"/><text x="12.8128%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (41 samples, 10.30%)</title><rect x="2.7638%" y="485" width="10.3015%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="41"/><text x="3.0138%" y="495.50">[libvulkan_rade..</text></g><g><title>[libc.so.6] (41 samples, 10.30%)</title><rect x="2.7638%" y="469" width="10.3015%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="41"/><text x="3.0138%" y="479.50">[libc.so.6]</text></g><g><title>[libvulkan_radeon.so] (41 samples, 10.30%)</title><rect x="2.7638%" y="453" width="10.3015%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="41"/><text x="3.0138%" y="463.50">[libvulkan_rade..</text></g><g><title>[libvulkan_radeon.so] (41 samples, 10.30%)</title><rect x="2.7638%" y="437" width="10.3015%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="41"/><text x="3.0138%" y="447.50">[libvulkan_rade..</text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="12.8141%" y="421" width="0.2513%" height="15" fill="rgb(235,93,37)" fg:x="51" fg:w="1"/><text x="13.0641%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (42 samples, 10.55%)</title><rect x="2.7638%" y="501" width="10.5528%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="42"/><text x="3.0138%" y="511.50">[libvulkan_rade..</text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="485" width="0.2513%" height="15" fill="rgb(222,207,29)" fg:x="52" fg:w="1"/><text x="13.3153%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="469" width="0.2513%" height="15" fill="rgb(206,96,30)" fg:x="52" fg:w="1"/><text x="13.3153%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="453" width="0.2513%" height="15" fill="rgb(218,138,4)" fg:x="52" fg:w="1"/><text x="13.3153%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="437" width="0.2513%" height="15" fill="rgb(250,191,14)" fg:x="52" fg:w="1"/><text x="13.3153%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="421" width="0.2513%" height="15" fill="rgb(239,60,40)" fg:x="52" fg:w="1"/><text x="13.3153%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="13.0653%" y="405" width="0.2513%" height="15" fill="rgb(206,27,48)" fg:x="52" fg:w="1"/><text x="13.3153%" y="415.50"></text></g><g><title>[libc.so.6] (46 samples, 11.56%)</title><rect x="2.0101%" y="533" width="11.5578%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="46"/><text x="2.2601%" y="543.50">[libc.so.6]</text></g><g><title>[libc.so.6] (46 samples, 11.56%)</title><rect x="2.0101%" y="517" width="11.5578%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="46"/><text x="2.2601%" y="527.50">[libc.so.6]</text></g><g><title>__ctype_init (1 samples, 0.25%)</title><rect x="13.3166%" y="501" width="0.2513%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="1"/><text x="13.5666%" y="511.50"></text></g><g><title>&lt;wgpu_core::device::resource::Device&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="13.8191%" y="517" width="0.2513%" height="15" fill="rgb(231,138,38)" fg:x="55" fg:w="1"/><text x="14.0691%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::exit (1 samples, 0.25%)</title><rect x="13.8191%" y="501" width="0.2513%" height="15" fill="rgb(231,145,46)" fg:x="55" fg:w="1"/><text x="14.0691%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::free_resources (1 samples, 0.25%)</title><rect x="13.8191%" y="485" width="0.2513%" height="15" fill="rgb(251,118,11)" fg:x="55" fg:w="1"/><text x="14.0691%" y="495.50"></text></g><g><title>ash::device::Device::destroy_device (1 samples, 0.25%)</title><rect x="13.8191%" y="469" width="0.2513%" height="15" fill="rgb(217,147,25)" fg:x="55" fg:w="1"/><text x="14.0691%" y="479.50"></text></g><g><title>vkDestroyDevice (1 samples, 0.25%)</title><rect x="13.8191%" y="453" width="0.2513%" height="15" fill="rgb(247,81,37)" fg:x="55" fg:w="1"/><text x="14.0691%" y="463.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="13.8191%" y="437" width="0.2513%" height="15" fill="rgb(209,12,38)" fg:x="55" fg:w="1"/><text x="14.0691%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="13.8191%" y="421" width="0.2513%" height="15" fill="rgb(227,1,9)" fg:x="55" fg:w="1"/><text x="14.0691%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="13.8191%" y="405" width="0.2513%" height="15" fill="rgb(248,47,43)" fg:x="55" fg:w="1"/><text x="14.0691%" y="415.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="13.8191%" y="389" width="0.2513%" height="15" fill="rgb(221,10,30)" fg:x="55" fg:w="1"/><text x="14.0691%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="13.8191%" y="373" width="0.2513%" height="15" fill="rgb(210,229,1)" fg:x="55" fg:w="1"/><text x="14.0691%" y="383.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="13.8191%" y="357" width="0.2513%" height="15" fill="rgb(222,148,37)" fg:x="55" fg:w="1"/><text x="14.0691%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="13.8191%" y="341" width="0.2513%" height="15" fill="rgb(234,67,33)" fg:x="55" fg:w="1"/><text x="14.0691%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="13.8191%" y="325" width="0.2513%" height="15" fill="rgb(247,98,35)" fg:x="55" fg:w="1"/><text x="14.0691%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="13.8191%" y="309" width="0.2513%" height="15" fill="rgb(247,138,52)" fg:x="55" fg:w="1"/><text x="14.0691%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 1.76%)</title><rect x="14.8241%" y="293" width="1.7588%" height="15" fill="rgb(213,79,30)" fg:x="59" fg:w="7"/><text x="15.0741%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 1.01%)</title><rect x="15.5779%" y="277" width="1.0050%" height="15" fill="rgb(246,177,23)" fg:x="62" fg:w="4"/><text x="15.8279%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.50%)</title><rect x="16.0804%" y="261" width="0.5025%" height="15" fill="rgb(230,62,27)" fg:x="64" fg:w="2"/><text x="16.3304%" y="271.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="16.3317%" y="245" width="0.2513%" height="15" fill="rgb(216,154,8)" fg:x="65" fg:w="1"/><text x="16.5817%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="16.5829%" y="261" width="0.2513%" height="15" fill="rgb(244,35,45)" fg:x="66" fg:w="1"/><text x="16.8329%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="16.5829%" y="245" width="0.2513%" height="15" fill="rgb(251,115,12)" fg:x="66" fg:w="1"/><text x="16.8329%" y="255.50"></text></g><g><title>[libLLVM-16.so] (2 samples, 0.50%)</title><rect x="16.5829%" y="277" width="0.5025%" height="15" fill="rgb(240,54,50)" fg:x="66" fg:w="2"/><text x="16.8329%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="16.8342%" y="261" width="0.2513%" height="15" fill="rgb(233,84,52)" fg:x="67" fg:w="1"/><text x="17.0842%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="17.0854%" y="277" width="0.2513%" height="15" fill="rgb(207,117,47)" fg:x="68" fg:w="1"/><text x="17.3354%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="17.0854%" y="261" width="0.2513%" height="15" fill="rgb(249,43,39)" fg:x="68" fg:w="1"/><text x="17.3354%" y="271.50"></text></g><g><title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.25%)</title><rect x="17.3367%" y="229" width="0.2513%" height="15" fill="rgb(209,38,44)" fg:x="69" fg:w="1"/><text x="17.5867%" y="239.50"></text></g><g><title>llvm::StringMapImpl::RehashTable (1 samples, 0.25%)</title><rect x="17.5879%" y="229" width="0.2513%" height="15" fill="rgb(236,212,23)" fg:x="70" fg:w="1"/><text x="17.8379%" y="239.50"></text></g><g><title>llvm::cl::Option::addArgument (3 samples, 0.75%)</title><rect x="17.3367%" y="277" width="0.7538%" height="15" fill="rgb(242,79,21)" fg:x="69" fg:w="3"/><text x="17.5867%" y="287.50"></text></g><g><title>[libLLVM-16.so] (3 samples, 0.75%)</title><rect x="17.3367%" y="261" width="0.7538%" height="15" fill="rgb(211,96,35)" fg:x="69" fg:w="3"/><text x="17.5867%" y="271.50"></text></g><g><title>[libLLVM-16.so] (3 samples, 0.75%)</title><rect x="17.3367%" y="245" width="0.7538%" height="15" fill="rgb(253,215,40)" fg:x="69" fg:w="3"/><text x="17.5867%" y="255.50"></text></g><g><title>operator new (1 samples, 0.25%)</title><rect x="17.8392%" y="229" width="0.2513%" height="15" fill="rgb(211,81,21)" fg:x="71" fg:w="1"/><text x="18.0892%" y="239.50"></text></g><g><title>aligned_alloc (1 samples, 0.25%)</title><rect x="17.8392%" y="213" width="0.2513%" height="15" fill="rgb(208,190,38)" fg:x="71" fg:w="1"/><text x="18.0892%" y="223.50"></text></g><g><title>[libLLVM-16.so] (7 samples, 1.76%)</title><rect x="16.5829%" y="293" width="1.7588%" height="15" fill="rgb(235,213,38)" fg:x="66" fg:w="7"/><text x="16.8329%" y="303.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.25%)</title><rect x="18.0905%" y="277" width="0.2513%" height="15" fill="rgb(237,122,38)" fg:x="72" fg:w="1"/><text x="18.3405%" y="287.50"></text></g><g><title>[libvulkan.so.1.3.276] (19 samples, 4.77%)</title><rect x="14.0704%" y="517" width="4.7739%" height="15" fill="rgb(244,218,35)" fg:x="56" fg:w="19"/><text x="14.3204%" y="527.50">[libvu..</text></g><g><title>[libvulkan.so.1.3.276] (19 samples, 4.77%)</title><rect x="14.0704%" y="501" width="4.7739%" height="15" fill="rgb(240,68,47)" fg:x="56" fg:w="19"/><text x="14.3204%" y="511.50">[libvu..</text></g><g><title>[libvulkan.so.1.3.276] (19 samples, 4.77%)</title><rect x="14.0704%" y="485" width="4.7739%" height="15" fill="rgb(210,16,53)" fg:x="56" fg:w="19"/><text x="14.3204%" y="495.50">[libvu..</text></g><g><title>dlopen (19 samples, 4.77%)</title><rect x="14.0704%" y="469" width="4.7739%" height="15" fill="rgb(235,124,12)" fg:x="56" fg:w="19"/><text x="14.3204%" y="479.50">dlopen</text></g><g><title>[libc.so.6] (19 samples, 4.77%)</title><rect x="14.0704%" y="453" width="4.7739%" height="15" fill="rgb(224,169,11)" fg:x="56" fg:w="19"/><text x="14.3204%" y="463.50">[libc...</text></g><g><title>[ld-linux-x86-64.so.2] (19 samples, 4.77%)</title><rect x="14.0704%" y="437" width="4.7739%" height="15" fill="rgb(250,166,2)" fg:x="56" fg:w="19"/><text x="14.3204%" y="447.50">[ld-li..</text></g><g><title>_dl_catch_exception (19 samples, 4.77%)</title><rect x="14.0704%" y="421" width="4.7739%" height="15" fill="rgb(242,216,29)" fg:x="56" fg:w="19"/><text x="14.3204%" y="431.50">_dl_ca..</text></g><g><title>[libc.so.6] (19 samples, 4.77%)</title><rect x="14.0704%" y="405" width="4.7739%" height="15" fill="rgb(230,116,27)" fg:x="56" fg:w="19"/><text x="14.3204%" y="415.50">[libc...</text></g><g><title>[ld-linux-x86-64.so.2] (19 samples, 4.77%)</title><rect x="14.0704%" y="389" width="4.7739%" height="15" fill="rgb(228,99,48)" fg:x="56" fg:w="19"/><text x="14.3204%" y="399.50">[ld-li..</text></g><g><title>_dl_catch_exception (19 samples, 4.77%)</title><rect x="14.0704%" y="373" width="4.7739%" height="15" fill="rgb(253,11,6)" fg:x="56" fg:w="19"/><text x="14.3204%" y="383.50">_dl_ca..</text></g><g><title>[ld-linux-x86-64.so.2] (19 samples, 4.77%)</title><rect x="14.0704%" y="357" width="4.7739%" height="15" fill="rgb(247,143,39)" fg:x="56" fg:w="19"/><text x="14.3204%" y="367.50">[ld-li..</text></g><g><title>_dl_catch_exception (19 samples, 4.77%)</title><rect x="14.0704%" y="341" width="4.7739%" height="15" fill="rgb(236,97,10)" fg:x="56" fg:w="19"/><text x="14.3204%" y="351.50">_dl_ca..</text></g><g><title>[ld-linux-x86-64.so.2] (19 samples, 4.77%)</title><rect x="14.0704%" y="325" width="4.7739%" height="15" fill="rgb(233,208,19)" fg:x="56" fg:w="19"/><text x="14.3204%" y="335.50">[ld-li..</text></g><g><title>[ld-linux-x86-64.so.2] (19 samples, 4.77%)</title><rect x="14.0704%" y="309" width="4.7739%" height="15" fill="rgb(216,164,2)" fg:x="56" fg:w="19"/><text x="14.3204%" y="319.50">[ld-li..</text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="18.3417%" y="293" width="0.5025%" height="15" fill="rgb(220,129,5)" fg:x="73" fg:w="2"/><text x="18.5917%" y="303.50"></text></g><g><title>[libc.so.6] (19 samples, 4.77%)</title><rect x="18.8442%" y="501" width="4.7739%" height="15" fill="rgb(242,17,10)" fg:x="75" fg:w="19"/><text x="19.0942%" y="511.50">[libc...</text></g><g><title>core::ptr::drop_in_place&lt;complex_vis::gpu::SDFCompute&gt; (1 samples, 0.25%)</title><rect x="23.6181%" y="501" width="0.2513%" height="15" fill="rgb(242,107,0)" fg:x="94" fg:w="1"/><text x="23.8681%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Device&gt; (1 samples, 0.25%)</title><rect x="23.6181%" y="485" width="0.2513%" height="15" fill="rgb(251,28,31)" fg:x="94" fg:w="1"/><text x="23.8681%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_drop (1 samples, 0.25%)</title><rect x="23.6181%" y="469" width="0.2513%" height="15" fill="rgb(233,223,10)" fg:x="94" fg:w="1"/><text x="23.8681%" y="479.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_drop (1 samples, 0.25%)</title><rect x="23.6181%" y="453" width="0.2513%" height="15" fill="rgb(215,21,27)" fg:x="94" fg:w="1"/><text x="23.8681%" y="463.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.25%)</title><rect x="23.6181%" y="437" width="0.2513%" height="15" fill="rgb(232,23,21)" fg:x="94" fg:w="1"/><text x="23.8681%" y="447.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (1 samples, 0.25%)</title><rect x="23.6181%" y="421" width="0.2513%" height="15" fill="rgb(244,5,23)" fg:x="94" fg:w="1"/><text x="23.8681%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::wait (1 samples, 0.25%)</title><rect x="23.6181%" y="405" width="0.2513%" height="15" fill="rgb(226,81,46)" fg:x="94" fg:w="1"/><text x="23.8681%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::ShaderModule&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="501" width="0.2513%" height="15" fill="rgb(247,70,30)" fg:x="95" fg:w="1"/><text x="24.1193%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wgpu::context::DynContext&gt;&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="485" width="0.2513%" height="15" fill="rgb(212,68,19)" fg:x="95" fg:w="1"/><text x="24.1193%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="23.8693%" y="469" width="0.2513%" height="15" fill="rgb(240,187,13)" fg:x="95" fg:w="1"/><text x="24.1193%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.25%)</title><rect x="23.8693%" y="453" width="0.2513%" height="15" fill="rgb(223,113,26)" fg:x="95" fg:w="1"/><text x="24.1193%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn futures_intrusive::channel::channel_future::ChannelReceiveAccess&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="437" width="0.2513%" height="15" fill="rgb(206,192,2)" fg:x="95" fg:w="1"/><text x="24.1193%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="421" width="0.2513%" height="15" fill="rgb(241,108,4)" fg:x="95" fg:w="1"/><text x="24.1193%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::instance::Instance&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="405" width="0.2513%" height="15" fill="rgb(247,173,49)" fg:x="95" fg:w="1"/><text x="24.1193%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_hal::vulkan::Instance&gt;&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="389" width="0.2513%" height="15" fill="rgb(224,114,35)" fg:x="95" fg:w="1"/><text x="24.1193%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::vulkan::Instance&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="373" width="0.2513%" height="15" fill="rgb(245,159,27)" fg:x="95" fg:w="1"/><text x="24.1193%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu_hal::vulkan::InstanceShared&gt;&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="357" width="0.2513%" height="15" fill="rgb(245,172,44)" fg:x="95" fg:w="1"/><text x="24.1193%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="23.8693%" y="341" width="0.2513%" height="15" fill="rgb(236,23,11)" fg:x="95" fg:w="1"/><text x="24.1193%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.25%)</title><rect x="23.8693%" y="325" width="0.2513%" height="15" fill="rgb(205,117,38)" fg:x="95" fg:w="1"/><text x="24.1193%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::vulkan::InstanceShared&gt; (1 samples, 0.25%)</title><rect x="23.8693%" y="309" width="0.2513%" height="15" fill="rgb(237,72,25)" fg:x="95" fg:w="1"/><text x="24.1193%" y="319.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl core::ops::drop::Drop for wgpu_hal::vulkan::InstanceShared&gt;::drop (1 samples, 0.25%)</title><rect x="23.8693%" y="293" width="0.2513%" height="15" fill="rgb(244,70,9)" fg:x="95" fg:w="1"/><text x="24.1193%" y="303.50"></text></g><g><title>ash::instance::Instance::destroy_instance (1 samples, 0.25%)</title><rect x="23.8693%" y="277" width="0.2513%" height="15" fill="rgb(217,125,39)" fg:x="95" fg:w="1"/><text x="24.1193%" y="287.50"></text></g><g><title>vkDestroyInstance (1 samples, 0.25%)</title><rect x="23.8693%" y="261" width="0.2513%" height="15" fill="rgb(235,36,10)" fg:x="95" fg:w="1"/><text x="24.1193%" y="271.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="23.8693%" y="245" width="0.2513%" height="15" fill="rgb(251,123,47)" fg:x="95" fg:w="1"/><text x="24.1193%" y="255.50"></text></g><g><title>dlclose (1 samples, 0.25%)</title><rect x="23.8693%" y="229" width="0.2513%" height="15" fill="rgb(221,13,13)" fg:x="95" fg:w="1"/><text x="24.1193%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="23.8693%" y="213" width="0.2513%" height="15" fill="rgb(238,131,9)" fg:x="95" fg:w="1"/><text x="24.1193%" y="223.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="23.8693%" y="197" width="0.2513%" height="15" fill="rgb(211,50,8)" fg:x="95" fg:w="1"/><text x="24.1193%" y="207.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="23.8693%" y="181" width="0.2513%" height="15" fill="rgb(245,182,24)" fg:x="95" fg:w="1"/><text x="24.1193%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="23.8693%" y="165" width="0.2513%" height="15" fill="rgb(242,14,37)" fg:x="95" fg:w="1"/><text x="24.1193%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="23.8693%" y="149" width="0.2513%" height="15" fill="rgb(246,228,12)" fg:x="95" fg:w="1"/><text x="24.1193%" y="159.50"></text></g><g><title>Image_resize_linear_c (209 samples, 52.51%)</title><rect x="24.1206%" y="437" width="52.5126%" height="15" fill="rgb(213,55,15)" fg:x="96" fg:w="209"/><text x="24.3706%" y="447.50">Image_resize_linear_c</text></g><g><title>__poll (1 samples, 0.25%)</title><rect x="76.8844%" y="325" width="0.2513%" height="15" fill="rgb(209,9,3)" fg:x="306" fg:w="1"/><text x="77.1344%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.8844%" y="309" width="0.2513%" height="15" fill="rgb(230,59,30)" fg:x="306" fg:w="1"/><text x="77.1344%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.8844%" y="293" width="0.2513%" height="15" fill="rgb(209,121,21)" fg:x="306" fg:w="1"/><text x="77.1344%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.8844%" y="277" width="0.2513%" height="15" fill="rgb(220,109,13)" fg:x="306" fg:w="1"/><text x="77.1344%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.8844%" y="261" width="0.2513%" height="15" fill="rgb(232,18,1)" fg:x="306" fg:w="1"/><text x="77.1344%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="76.8844%" y="245" width="0.2513%" height="15" fill="rgb(215,41,42)" fg:x="306" fg:w="1"/><text x="77.1344%" y="255.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 1.01%)</title><rect x="76.6332%" y="421" width="1.0050%" height="15" fill="rgb(224,123,36)" fg:x="305" fg:w="4"/><text x="76.8832%" y="431.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.75%)</title><rect x="76.8844%" y="405" width="0.7538%" height="15" fill="rgb(240,125,3)" fg:x="306" fg:w="3"/><text x="77.1344%" y="415.50"></text></g><g><title>_XSend (3 samples, 0.75%)</title><rect x="76.8844%" y="389" width="0.7538%" height="15" fill="rgb(205,98,50)" fg:x="306" fg:w="3"/><text x="77.1344%" y="399.50"></text></g><g><title>xcb_writev (3 samples, 0.75%)</title><rect x="76.8844%" y="373" width="0.7538%" height="15" fill="rgb(205,185,37)" fg:x="306" fg:w="3"/><text x="77.1344%" y="383.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.75%)</title><rect x="76.8844%" y="357" width="0.7538%" height="15" fill="rgb(238,207,15)" fg:x="306" fg:w="3"/><text x="77.1344%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.75%)</title><rect x="76.8844%" y="341" width="0.7538%" height="15" fill="rgb(213,199,42)" fg:x="306" fg:w="3"/><text x="77.1344%" y="351.50"></text></g><g><title>writev (2 samples, 0.50%)</title><rect x="77.1357%" y="325" width="0.5025%" height="15" fill="rgb(235,201,11)" fg:x="307" fg:w="2"/><text x="77.3857%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="77.1357%" y="309" width="0.5025%" height="15" fill="rgb(207,46,11)" fg:x="307" fg:w="2"/><text x="77.3857%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="77.1357%" y="293" width="0.5025%" height="15" fill="rgb(241,35,35)" fg:x="307" fg:w="2"/><text x="77.3857%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.50%)</title><rect x="77.1357%" y="277" width="0.5025%" height="15" fill="rgb(243,32,47)" fg:x="307" fg:w="2"/><text x="77.3857%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="77.3869%" y="261" width="0.2513%" height="15" fill="rgb(247,202,23)" fg:x="308" fg:w="1"/><text x="77.6369%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="77.3869%" y="245" width="0.2513%" height="15" fill="rgb(219,102,11)" fg:x="308" fg:w="1"/><text x="77.6369%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="77.3869%" y="229" width="0.2513%" height="15" fill="rgb(243,110,44)" fg:x="308" fg:w="1"/><text x="77.6369%" y="239.50"></text></g><g><title>minifb::os::posix::x11::Window::raw_blit_buffer (214 samples, 53.77%)</title><rect x="24.1206%" y="453" width="53.7688%" height="15" fill="rgb(222,74,54)" fg:x="96" fg:w="214"/><text x="24.3706%" y="463.50">minifb::os::posix::x11::Window::raw_blit_buffer</text></g><g><title>XPutImage (5 samples, 1.26%)</title><rect x="76.6332%" y="437" width="1.2563%" height="15" fill="rgb(216,99,12)" fg:x="305" fg:w="5"/><text x="76.8832%" y="447.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="77.6382%" y="421" width="0.2513%" height="15" fill="rgb(226,22,26)" fg:x="309" fg:w="1"/><text x="77.8882%" y="431.50"></text></g><g><title>minifb::Window::update_with_buffer (215 samples, 54.02%)</title><rect x="24.1206%" y="501" width="54.0201%" height="15" fill="rgb(217,163,10)" fg:x="96" fg:w="215"/><text x="24.3706%" y="511.50">minifb::Window::update_with_buffer</text></g><g><title>minifb::os::posix::Window::update_with_buffer_stride (215 samples, 54.02%)</title><rect x="24.1206%" y="485" width="54.0201%" height="15" fill="rgb(213,25,53)" fg:x="96" fg:w="215"/><text x="24.3706%" y="495.50">minifb::os::posix::Window::update_with_buffer_stride</text></g><g><title>minifb::os::posix::x11::Window::update_with_buffer_stride (215 samples, 54.02%)</title><rect x="24.1206%" y="469" width="54.0201%" height="15" fill="rgb(252,105,26)" fg:x="96" fg:w="215"/><text x="24.3706%" y="479.50">minifb::os::posix::x11::Window::update_with_buffer_stride</text></g><g><title>minifb::os::posix::x11::Window::update (1 samples, 0.25%)</title><rect x="77.8894%" y="453" width="0.2513%" height="15" fill="rgb(220,39,43)" fg:x="310" fg:w="1"/><text x="78.1394%" y="463.50"></text></g><g><title>minifb::os::posix::x11::Window::raw_get_mouse_pos (1 samples, 0.25%)</title><rect x="77.8894%" y="437" width="0.2513%" height="15" fill="rgb(229,68,48)" fg:x="310" fg:w="1"/><text x="78.1394%" y="447.50"></text></g><g><title>XQueryPointer (1 samples, 0.25%)</title><rect x="77.8894%" y="421" width="0.2513%" height="15" fill="rgb(252,8,32)" fg:x="310" fg:w="1"/><text x="78.1394%" y="431.50"></text></g><g><title>_XReply (1 samples, 0.25%)</title><rect x="77.8894%" y="405" width="0.2513%" height="15" fill="rgb(223,20,43)" fg:x="310" fg:w="1"/><text x="78.1394%" y="415.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.25%)</title><rect x="77.8894%" y="389" width="0.2513%" height="15" fill="rgb(229,81,49)" fg:x="310" fg:w="1"/><text x="78.1394%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.25%)</title><rect x="77.8894%" y="373" width="0.2513%" height="15" fill="rgb(236,28,36)" fg:x="310" fg:w="1"/><text x="78.1394%" y="383.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.25%)</title><rect x="77.8894%" y="357" width="0.2513%" height="15" fill="rgb(249,185,26)" fg:x="310" fg:w="1"/><text x="78.1394%" y="367.50"></text></g><g><title>ash::device::Device::allocate_command_buffers (1 samples, 0.25%)</title><rect x="78.1407%" y="325" width="0.2513%" height="15" fill="rgb(249,174,33)" fg:x="311" fg:w="1"/><text x="78.3907%" y="335.50"></text></g><g><title>vkAllocateCommandBuffers (1 samples, 0.25%)</title><rect x="78.1407%" y="309" width="0.2513%" height="15" fill="rgb(233,201,37)" fg:x="311" fg:w="1"/><text x="78.3907%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="78.1407%" y="293" width="0.2513%" height="15" fill="rgb(221,78,26)" fg:x="311" fg:w="1"/><text x="78.3907%" y="303.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="78.1407%" y="277" width="0.2513%" height="15" fill="rgb(250,127,30)" fg:x="311" fg:w="1"/><text x="78.3907%" y="287.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="78.1407%" y="261" width="0.2513%" height="15" fill="rgb(230,49,44)" fg:x="311" fg:w="1"/><text x="78.3907%" y="271.50"></text></g><g><title>__libc_calloc (1 samples, 0.25%)</title><rect x="78.1407%" y="245" width="0.2513%" height="15" fill="rgb(229,67,23)" fg:x="311" fg:w="1"/><text x="78.3907%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="78.1407%" y="229" width="0.2513%" height="15" fill="rgb(249,83,47)" fg:x="311" fg:w="1"/><text x="78.3907%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.1407%" y="213" width="0.2513%" height="15" fill="rgb(215,43,3)" fg:x="311" fg:w="1"/><text x="78.3907%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.1407%" y="197" width="0.2513%" height="15" fill="rgb(238,154,13)" fg:x="311" fg:w="1"/><text x="78.3907%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.25%)</title><rect x="78.1407%" y="181" width="0.2513%" height="15" fill="rgb(219,56,2)" fg:x="311" fg:w="1"/><text x="78.3907%" y="191.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (4 samples, 1.01%)</title><rect x="78.1407%" y="357" width="1.0050%" height="15" fill="rgb(233,0,4)" fg:x="311" fg:w="4"/><text x="78.3907%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (4 samples, 1.01%)</title><rect x="78.1407%" y="341" width="1.0050%" height="15" fill="rgb(235,30,7)" fg:x="311" fg:w="4"/><text x="78.3907%" y="351.50"></text></g><g><title>ash::device::Device::begin_command_buffer (3 samples, 0.75%)</title><rect x="78.3920%" y="325" width="0.7538%" height="15" fill="rgb(250,79,13)" fg:x="312" fg:w="3"/><text x="78.6420%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="78.3920%" y="309" width="0.7538%" height="15" fill="rgb(211,146,34)" fg:x="312" fg:w="3"/><text x="78.6420%" y="319.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (5 samples, 1.26%)</title><rect x="78.1407%" y="437" width="1.2563%" height="15" fill="rgb(228,22,38)" fg:x="311" fg:w="5"/><text x="78.3907%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_unmap (5 samples, 1.26%)</title><rect x="78.1407%" y="421" width="1.2563%" height="15" fill="rgb(235,168,5)" fg:x="311" fg:w="5"/><text x="78.3907%" y="431.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::buffer_unmap (5 samples, 1.26%)</title><rect x="78.1407%" y="405" width="1.2563%" height="15" fill="rgb(221,155,16)" fg:x="311" fg:w="5"/><text x="78.3907%" y="415.50"></text></g><g><title>wgpu_core::resource::Buffer&lt;A&gt;::unmap (5 samples, 1.26%)</title><rect x="78.1407%" y="389" width="1.2563%" height="15" fill="rgb(215,215,53)" fg:x="311" fg:w="5"/><text x="78.3907%" y="399.50"></text></g><g><title>wgpu_core::resource::Buffer&lt;A&gt;::unmap_inner (5 samples, 1.26%)</title><rect x="78.1407%" y="373" width="1.2563%" height="15" fill="rgb(223,4,10)" fg:x="311" fg:w="5"/><text x="78.3907%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (1 samples, 0.25%)</title><rect x="79.1457%" y="357" width="0.2513%" height="15" fill="rgb(234,103,6)" fg:x="315" fg:w="1"/><text x="79.3957%" y="367.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (1 samples, 0.25%)</title><rect x="79.1457%" y="341" width="0.2513%" height="15" fill="rgb(227,97,0)" fg:x="315" fg:w="1"/><text x="79.3957%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="79.1457%" y="325" width="0.2513%" height="15" fill="rgb(234,150,53)" fg:x="315" fg:w="1"/><text x="79.3957%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="79.1457%" y="309" width="0.2513%" height="15" fill="rgb(228,201,54)" fg:x="315" fg:w="1"/><text x="79.3957%" y="319.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="79.3970%" y="437" width="0.2513%" height="15" fill="rgb(222,22,37)" fg:x="316" fg:w="1"/><text x="79.6470%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="79.3970%" y="421" width="0.2513%" height="15" fill="rgb(237,53,32)" fg:x="316" fg:w="1"/><text x="79.6470%" y="431.50"></text></g><g><title>ash::device::Device::get_buffer_memory_requirements (1 samples, 0.25%)</title><rect x="79.6482%" y="341" width="0.2513%" height="15" fill="rgb(233,25,53)" fg:x="317" fg:w="1"/><text x="79.8982%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="79.6482%" y="325" width="0.2513%" height="15" fill="rgb(210,40,34)" fg:x="317" fg:w="1"/><text x="79.8982%" y="335.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (8 samples, 2.01%)</title><rect x="78.1407%" y="453" width="2.0101%" height="15" fill="rgb(241,220,44)" fg:x="311" fg:w="8"/><text x="78.3907%" y="463.50">&lt;..</text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="437" width="0.5025%" height="15" fill="rgb(235,28,35)" fg:x="317" fg:w="2"/><text x="79.8982%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="421" width="0.5025%" height="15" fill="rgb(210,56,17)" fg:x="317" fg:w="2"/><text x="79.8982%" y="431.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="405" width="0.5025%" height="15" fill="rgb(224,130,29)" fg:x="317" fg:w="2"/><text x="79.8982%" y="415.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="389" width="0.5025%" height="15" fill="rgb(235,212,8)" fg:x="317" fg:w="2"/><text x="79.8982%" y="399.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="373" width="0.5025%" height="15" fill="rgb(223,33,50)" fg:x="317" fg:w="2"/><text x="79.8982%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (2 samples, 0.50%)</title><rect x="79.6482%" y="357" width="0.5025%" height="15" fill="rgb(219,149,13)" fg:x="317" fg:w="2"/><text x="79.8982%" y="367.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.25%)</title><rect x="79.8995%" y="341" width="0.2513%" height="15" fill="rgb(250,156,29)" fg:x="318" fg:w="1"/><text x="80.1495%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.25%)</title><rect x="79.8995%" y="325" width="0.2513%" height="15" fill="rgb(216,193,19)" fg:x="318" fg:w="1"/><text x="80.1495%" y="335.50"></text></g><g><title>gpu_alloc::block::MemoryBlock&lt;M&gt;::new (1 samples, 0.25%)</title><rect x="79.8995%" y="309" width="0.2513%" height="15" fill="rgb(216,135,14)" fg:x="318" fg:w="1"/><text x="80.1495%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (1 samples, 0.25%)</title><rect x="80.1508%" y="453" width="0.2513%" height="15" fill="rgb(241,47,5)" fg:x="319" fg:w="1"/><text x="80.4008%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::bind_group_drop (1 samples, 0.25%)</title><rect x="80.1508%" y="437" width="0.2513%" height="15" fill="rgb(233,42,35)" fg:x="319" fg:w="1"/><text x="80.4008%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::compute::State&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="357" width="0.2513%" height="15" fill="rgb(231,13,6)" fg:x="320" fg:w="1"/><text x="80.6520%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="341" width="0.2513%" height="15" fill="rgb(207,181,40)" fg:x="320" fg:w="1"/><text x="80.6520%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::compat::BoundBindGroupLayouts&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="325" width="0.2513%" height="15" fill="rgb(254,173,49)" fg:x="320" fg:w="1"/><text x="80.6520%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;wgpu_core::command::bind::compat::Entry&lt;wgpu_hal::vulkan::Api&gt;,8_usize&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="309" width="0.2513%" height="15" fill="rgb(221,1,38)" fg:x="320" fg:w="1"/><text x="80.6520%" y="319.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="80.4020%" y="293" width="0.2513%" height="15" fill="rgb(206,124,46)" fg:x="320" fg:w="1"/><text x="80.6520%" y="303.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (1 samples, 0.25%)</title><rect x="80.4020%" y="277" width="0.2513%" height="15" fill="rgb(249,21,11)" fg:x="320" fg:w="1"/><text x="80.6520%" y="287.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (1 samples, 0.25%)</title><rect x="80.4020%" y="261" width="0.2513%" height="15" fill="rgb(222,201,40)" fg:x="320" fg:w="1"/><text x="80.6520%" y="271.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (1 samples, 0.25%)</title><rect x="80.4020%" y="245" width="0.2513%" height="15" fill="rgb(235,61,29)" fg:x="320" fg:w="1"/><text x="80.6520%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::command::bind::compat::Entry&lt;wgpu_hal::vulkan::Api&gt;]&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="229" width="0.2513%" height="15" fill="rgb(219,207,3)" fg:x="320" fg:w="1"/><text x="80.6520%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::compat::Entry&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="213" width="0.2513%" height="15" fill="rgb(222,56,46)" fg:x="320" fg:w="1"/><text x="80.6520%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;wgpu_core::binding_model::BindGroupLayout&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="80.4020%" y="197" width="0.2513%" height="15" fill="rgb(239,76,54)" fg:x="320" fg:w="1"/><text x="80.6520%" y="207.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (1 samples, 0.25%)</title><rect x="80.6533%" y="357" width="0.2513%" height="15" fill="rgb(231,124,27)" fg:x="321" fg:w="1"/><text x="80.9033%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.25%)</title><rect x="80.6533%" y="341" width="0.2513%" height="15" fill="rgb(249,195,6)" fg:x="321" fg:w="1"/><text x="80.9033%" y="351.50"></text></g><g><title>ash::device::Device::end_command_buffer (1 samples, 0.25%)</title><rect x="80.6533%" y="325" width="0.2513%" height="15" fill="rgb(237,174,47)" fg:x="321" fg:w="1"/><text x="80.9033%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="80.6533%" y="309" width="0.2513%" height="15" fill="rgb(206,201,31)" fg:x="321" fg:w="1"/><text x="80.9033%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="80.6533%" y="293" width="0.2513%" height="15" fill="rgb(231,57,52)" fg:x="321" fg:w="1"/><text x="80.9033%" y="303.50"></text></g><g><title>wgpu_core::command::bind::Binder&lt;A&gt;::assign_group (1 samples, 0.25%)</title><rect x="80.9045%" y="357" width="0.2513%" height="15" fill="rgb(248,177,22)" fg:x="322" fg:w="1"/><text x="81.1545%" y="367.50"></text></g><g><title>wgpu_core::command::compute::State&lt;A&gt;::is_ready (1 samples, 0.25%)</title><rect x="81.1558%" y="357" width="0.2513%" height="15" fill="rgb(215,211,37)" fg:x="323" fg:w="1"/><text x="81.4058%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::ComputePass&gt; (5 samples, 1.26%)</title><rect x="80.4020%" y="453" width="1.2563%" height="15" fill="rgb(241,128,51)" fg:x="320" fg:w="5"/><text x="80.6520%" y="463.50"></text></g><g><title>&lt;wgpu::ComputePass as core::ops::drop::Drop&gt;::drop (5 samples, 1.26%)</title><rect x="80.4020%" y="437" width="1.2563%" height="15" fill="rgb(227,165,31)" fg:x="320" fg:w="5"/><text x="80.6520%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_compute_pass (5 samples, 1.26%)</title><rect x="80.4020%" y="421" width="1.2563%" height="15" fill="rgb(228,167,24)" fg:x="320" fg:w="5"/><text x="80.6520%" y="431.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_compute_pass (5 samples, 1.26%)</title><rect x="80.4020%" y="405" width="1.2563%" height="15" fill="rgb(228,143,12)" fg:x="320" fg:w="5"/><text x="80.6520%" y="415.50"></text></g><g><title>wgpu_core::command::compute::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_compute_pass (5 samples, 1.26%)</title><rect x="80.4020%" y="389" width="1.2563%" height="15" fill="rgb(249,149,8)" fg:x="320" fg:w="5"/><text x="80.6520%" y="399.50"></text></g><g><title>wgpu_core::command::compute::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_compute_pass_impl (5 samples, 1.26%)</title><rect x="80.4020%" y="373" width="1.2563%" height="15" fill="rgb(243,35,44)" fg:x="320" fg:w="5"/><text x="80.6520%" y="383.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (1 samples, 0.25%)</title><rect x="81.4070%" y="357" width="0.2513%" height="15" fill="rgb(246,89,9)" fg:x="324" fg:w="1"/><text x="81.6570%" y="367.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_size (1 samples, 0.25%)</title><rect x="81.4070%" y="341" width="0.2513%" height="15" fill="rgb(233,213,13)" fg:x="324" fg:w="1"/><text x="81.6570%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::ComputePipeline&gt; (1 samples, 0.25%)</title><rect x="81.6583%" y="453" width="0.2513%" height="15" fill="rgb(233,141,41)" fg:x="325" fg:w="1"/><text x="81.9083%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::compute_pipeline_drop (1 samples, 0.25%)</title><rect x="81.6583%" y="437" width="0.2513%" height="15" fill="rgb(239,167,4)" fg:x="325" fg:w="1"/><text x="81.9083%" y="447.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::compute_pipeline_drop (1 samples, 0.25%)</title><rect x="81.6583%" y="421" width="0.2513%" height="15" fill="rgb(209,217,16)" fg:x="325" fg:w="1"/><text x="81.9083%" y="431.50"></text></g><g><title>wgpu_core::registry::Registry&lt;I,T&gt;::unregister (1 samples, 0.25%)</title><rect x="81.6583%" y="405" width="0.2513%" height="15" fill="rgb(219,88,35)" fg:x="325" fg:w="1"/><text x="81.9083%" y="415.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::remove (1 samples, 0.25%)</title><rect x="81.6583%" y="389" width="0.2513%" height="15" fill="rgb(220,193,23)" fg:x="325" fg:w="1"/><text x="81.9083%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.25%)</title><rect x="81.6583%" y="373" width="0.2513%" height="15" fill="rgb(230,90,52)" fg:x="325" fg:w="1"/><text x="81.9083%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.25%)</title><rect x="81.6583%" y="357" width="0.2513%" height="15" fill="rgb(252,106,19)" fg:x="325" fg:w="1"/><text x="81.9083%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.25%)</title><rect x="81.6583%" y="341" width="0.2513%" height="15" fill="rgb(206,74,20)" fg:x="325" fg:w="1"/><text x="81.9083%" y="351.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range (1 samples, 0.25%)</title><rect x="81.9095%" y="453" width="0.2513%" height="15" fill="rgb(230,138,44)" fg:x="326" fg:w="1"/><text x="82.1595%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_get_mapped_range (1 samples, 0.25%)</title><rect x="81.9095%" y="437" width="0.2513%" height="15" fill="rgb(235,182,43)" fg:x="326" fg:w="1"/><text x="82.1595%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_get_mapped_range (1 samples, 0.25%)</title><rect x="81.9095%" y="421" width="0.2513%" height="15" fill="rgb(242,16,51)" fg:x="326" fg:w="1"/><text x="82.1595%" y="431.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_bind_group (1 samples, 0.25%)</title><rect x="82.1608%" y="389" width="0.2513%" height="15" fill="rgb(248,9,4)" fg:x="327" fg:w="1"/><text x="82.4108%" y="399.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_buffer_binding (1 samples, 0.25%)</title><rect x="82.1608%" y="373" width="0.2513%" height="15" fill="rgb(210,31,22)" fg:x="327" fg:w="1"/><text x="82.4108%" y="383.50"></text></g><g><title>wgpu_core::track::buffer::BufferBindGroupState&lt;A&gt;::add_single (1 samples, 0.25%)</title><rect x="82.1608%" y="357" width="0.2513%" height="15" fill="rgb(239,54,39)" fg:x="327" fg:w="1"/><text x="82.4108%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.25%)</title><rect x="82.1608%" y="341" width="0.2513%" height="15" fill="rgb(230,99,41)" fg:x="327" fg:w="1"/><text x="82.4108%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.25%)</title><rect x="82.1608%" y="325" width="0.2513%" height="15" fill="rgb(253,106,12)" fg:x="327" fg:w="1"/><text x="82.4108%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.25%)</title><rect x="82.1608%" y="309" width="0.2513%" height="15" fill="rgb(213,46,41)" fg:x="327" fg:w="1"/><text x="82.4108%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="82.1608%" y="293" width="0.2513%" height="15" fill="rgb(215,133,35)" fg:x="327" fg:w="1"/><text x="82.4108%" y="303.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="82.1608%" y="277" width="0.2513%" height="15" fill="rgb(213,28,5)" fg:x="327" fg:w="1"/><text x="82.4108%" y="287.50"></text></g><g><title>wgpu_core::registry::FutureId&lt;I,T&gt;::assign (1 samples, 0.25%)</title><rect x="82.4121%" y="389" width="0.2513%" height="15" fill="rgb(215,77,49)" fg:x="328" fg:w="1"/><text x="82.6621%" y="399.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::insert (1 samples, 0.25%)</title><rect x="82.4121%" y="373" width="0.2513%" height="15" fill="rgb(248,100,22)" fg:x="328" fg:w="1"/><text x="82.6621%" y="383.50"></text></g><g><title>wgpu_core::storage::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.25%)</title><rect x="82.4121%" y="357" width="0.2513%" height="15" fill="rgb(208,67,9)" fg:x="328" fg:w="1"/><text x="82.6621%" y="367.50"></text></g><g><title>core::mem::replace (1 samples, 0.25%)</title><rect x="82.4121%" y="341" width="0.2513%" height="15" fill="rgb(219,133,21)" fg:x="328" fg:w="1"/><text x="82.6621%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.25%)</title><rect x="82.4121%" y="325" width="0.2513%" height="15" fill="rgb(246,46,29)" fg:x="328" fg:w="1"/><text x="82.6621%" y="335.50"></text></g><g><title>wgpu_core::registry::Registry&lt;I,T&gt;::get (1 samples, 0.25%)</title><rect x="82.6633%" y="389" width="0.2513%" height="15" fill="rgb(246,185,52)" fg:x="329" fg:w="1"/><text x="82.9133%" y="399.50"></text></g><g><title>wgpu::Device::create_bind_group (4 samples, 1.01%)</title><rect x="82.1608%" y="453" width="1.0050%" height="15" fill="rgb(252,136,11)" fg:x="327" fg:w="4"/><text x="82.4108%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (4 samples, 1.01%)</title><rect x="82.1608%" y="437" width="1.0050%" height="15" fill="rgb(219,138,53)" fg:x="327" fg:w="4"/><text x="82.4108%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_bind_group (4 samples, 1.01%)</title><rect x="82.1608%" y="421" width="1.0050%" height="15" fill="rgb(211,51,23)" fg:x="327" fg:w="4"/><text x="82.4108%" y="431.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_bind_group (4 samples, 1.01%)</title><rect x="82.1608%" y="405" width="1.0050%" height="15" fill="rgb(247,221,28)" fg:x="327" fg:w="4"/><text x="82.4108%" y="415.50"></text></g><g><title>wgpu_core::registry::Registry&lt;I,T&gt;::prepare (1 samples, 0.25%)</title><rect x="82.9146%" y="389" width="0.2513%" height="15" fill="rgb(251,222,45)" fg:x="330" fg:w="1"/><text x="83.1646%" y="399.50"></text></g><g><title>wgpu_core::identity::IdentityManager&lt;I&gt;::process (1 samples, 0.25%)</title><rect x="82.9146%" y="373" width="0.2513%" height="15" fill="rgb(217,162,53)" fg:x="330" fg:w="1"/><text x="83.1646%" y="383.50"></text></g><g><title>wgpu_core::identity::IdentityValues::alloc (1 samples, 0.25%)</title><rect x="82.9146%" y="357" width="0.2513%" height="15" fill="rgb(229,93,14)" fg:x="330" fg:w="1"/><text x="83.1646%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.25%)</title><rect x="82.9146%" y="341" width="0.2513%" height="15" fill="rgb(209,67,49)" fg:x="330" fg:w="1"/><text x="83.1646%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.25%)</title><rect x="82.9146%" y="325" width="0.2513%" height="15" fill="rgb(213,87,29)" fg:x="330" fg:w="1"/><text x="83.1646%" y="335.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="453" width="0.2513%" height="15" fill="rgb(205,151,52)" fg:x="331" fg:w="1"/><text x="83.4158%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="437" width="0.2513%" height="15" fill="rgb(253,215,39)" fg:x="331" fg:w="1"/><text x="83.4158%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="421" width="0.2513%" height="15" fill="rgb(221,220,41)" fg:x="331" fg:w="1"/><text x="83.4158%" y="431.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="405" width="0.2513%" height="15" fill="rgb(218,133,21)" fg:x="331" fg:w="1"/><text x="83.4158%" y="415.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="389" width="0.2513%" height="15" fill="rgb(221,193,43)" fg:x="331" fg:w="1"/><text x="83.4158%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.25%)</title><rect x="83.1658%" y="373" width="0.2513%" height="15" fill="rgb(240,128,52)" fg:x="331" fg:w="1"/><text x="83.4158%" y="383.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.25%)</title><rect x="83.1658%" y="357" width="0.2513%" height="15" fill="rgb(253,114,12)" fg:x="331" fg:w="1"/><text x="83.4158%" y="367.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.25%)</title><rect x="83.1658%" y="341" width="0.2513%" height="15" fill="rgb(215,223,47)" fg:x="331" fg:w="1"/><text x="83.4158%" y="351.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.25%)</title><rect x="83.1658%" y="325" width="0.2513%" height="15" fill="rgb(248,225,23)" fg:x="331" fg:w="1"/><text x="83.4158%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.25%)</title><rect x="83.1658%" y="309" width="0.2513%" height="15" fill="rgb(250,108,0)" fg:x="331" fg:w="1"/><text x="83.4158%" y="319.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.25%)</title><rect x="83.4171%" y="453" width="0.2513%" height="15" fill="rgb(228,208,7)" fg:x="332" fg:w="1"/><text x="83.6671%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (1 samples, 0.25%)</title><rect x="83.4171%" y="437" width="0.2513%" height="15" fill="rgb(244,45,10)" fg:x="332" fg:w="1"/><text x="83.6671%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_command_encoder (1 samples, 0.25%)</title><rect x="83.4171%" y="421" width="0.2513%" height="15" fill="rgb(207,125,25)" fg:x="332" fg:w="1"/><text x="83.6671%" y="431.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::make_late_sized_buffer_groups (1 samples, 0.25%)</title><rect x="83.6683%" y="373" width="0.2513%" height="15" fill="rgb(210,195,18)" fg:x="333" fg:w="1"/><text x="83.9183%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.25%)</title><rect x="83.6683%" y="357" width="0.2513%" height="15" fill="rgb(249,80,12)" fg:x="333" fg:w="1"/><text x="83.9183%" y="367.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="83.6683%" y="341" width="0.2513%" height="15" fill="rgb(221,65,9)" fg:x="333" fg:w="1"/><text x="83.9183%" y="351.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="83.6683%" y="325" width="0.2513%" height="15" fill="rgb(235,49,36)" fg:x="333" fg:w="1"/><text x="83.9183%" y="335.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::extend_from_iter (1 samples, 0.25%)</title><rect x="83.6683%" y="309" width="0.2513%" height="15" fill="rgb(225,32,20)" fg:x="333" fg:w="1"/><text x="83.9183%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="83.6683%" y="293" width="0.2513%" height="15" fill="rgb(215,141,46)" fg:x="333" fg:w="1"/><text x="83.9183%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.25%)</title><rect x="83.6683%" y="277" width="0.2513%" height="15" fill="rgb(250,160,47)" fg:x="333" fg:w="1"/><text x="83.9183%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.25%)</title><rect x="83.6683%" y="261" width="0.2513%" height="15" fill="rgb(216,222,40)" fg:x="333" fg:w="1"/><text x="83.9183%" y="271.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::make_late_sized_buffer_groups::_{{closure}} (1 samples, 0.25%)</title><rect x="83.6683%" y="245" width="0.2513%" height="15" fill="rgb(234,217,39)" fg:x="333" fg:w="1"/><text x="83.9183%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.25%)</title><rect x="83.6683%" y="229" width="0.2513%" height="15" fill="rgb(207,178,40)" fg:x="333" fg:w="1"/><text x="83.9183%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="83.6683%" y="213" width="0.2513%" height="15" fill="rgb(221,136,13)" fg:x="333" fg:w="1"/><text x="83.9183%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="83.6683%" y="197" width="0.2513%" height="15" fill="rgb(249,199,10)" fg:x="333" fg:w="1"/><text x="83.9183%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="83.6683%" y="181" width="0.2513%" height="15" fill="rgb(249,222,13)" fg:x="333" fg:w="1"/><text x="83.9183%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.25%)</title><rect x="83.6683%" y="165" width="0.2513%" height="15" fill="rgb(244,185,38)" fg:x="333" fg:w="1"/><text x="83.9183%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.25%)</title><rect x="83.6683%" y="149" width="0.2513%" height="15" fill="rgb(236,202,9)" fg:x="333" fg:w="1"/><text x="83.9183%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.25%)</title><rect x="83.6683%" y="133" width="0.2513%" height="15" fill="rgb(250,229,37)" fg:x="333" fg:w="1"/><text x="83.9183%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.25%)</title><rect x="83.6683%" y="117" width="0.2513%" height="15" fill="rgb(206,174,23)" fg:x="333" fg:w="1"/><text x="83.9183%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.25%)</title><rect x="83.6683%" y="101" width="0.2513%" height="15" fill="rgb(211,33,43)" fg:x="333" fg:w="1"/><text x="83.9183%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.25%)</title><rect x="83.6683%" y="85" width="0.2513%" height="15" fill="rgb(245,58,50)" fg:x="333" fg:w="1"/><text x="83.9183%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.25%)</title><rect x="83.6683%" y="69" width="0.2513%" height="15" fill="rgb(244,68,36)" fg:x="333" fg:w="1"/><text x="83.9183%" y="79.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="83.6683%" y="53" width="0.2513%" height="15" fill="rgb(232,229,15)" fg:x="333" fg:w="1"/><text x="83.9183%" y="63.50"></text></g><g><title>ash::device::Device::create_compute_pipelines (3 samples, 0.75%)</title><rect x="83.9196%" y="357" width="0.7538%" height="15" fill="rgb(254,30,23)" fg:x="334" fg:w="3"/><text x="84.1696%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="83.9196%" y="341" width="0.7538%" height="15" fill="rgb(235,160,14)" fg:x="334" fg:w="3"/><text x="84.1696%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="83.9196%" y="325" width="0.7538%" height="15" fill="rgb(212,155,44)" fg:x="334" fg:w="3"/><text x="84.1696%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="83.9196%" y="309" width="0.7538%" height="15" fill="rgb(226,2,50)" fg:x="334" fg:w="3"/><text x="84.1696%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="83.9196%" y="293" width="0.7538%" height="15" fill="rgb(234,177,6)" fg:x="334" fg:w="3"/><text x="84.1696%" y="303.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="83.9196%" y="277" width="0.7538%" height="15" fill="rgb(217,24,9)" fg:x="334" fg:w="3"/><text x="84.1696%" y="287.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.25%)</title><rect x="84.6734%" y="341" width="0.2513%" height="15" fill="rgb(220,13,46)" fg:x="337" fg:w="1"/><text x="84.9234%" y="351.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.25%)</title><rect x="84.6734%" y="325" width="0.2513%" height="15" fill="rgb(239,221,27)" fg:x="337" fg:w="1"/><text x="84.9234%" y="335.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.25%)</title><rect x="84.6734%" y="309" width="0.2513%" height="15" fill="rgb(222,198,25)" fg:x="337" fg:w="1"/><text x="84.9234%" y="319.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.25%)</title><rect x="84.6734%" y="293" width="0.2513%" height="15" fill="rgb(211,99,13)" fg:x="337" fg:w="1"/><text x="84.9234%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.25%)</title><rect x="84.6734%" y="277" width="0.2513%" height="15" fill="rgb(232,111,31)" fg:x="337" fg:w="1"/><text x="84.9234%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.25%)</title><rect x="84.6734%" y="261" width="0.2513%" height="15" fill="rgb(245,82,37)" fg:x="337" fg:w="1"/><text x="84.9234%" y="271.50"></text></g><g><title>naga::back::spv::layout::&lt;impl naga::back::spv::LogicalLayout&gt;::in_words (1 samples, 0.25%)</title><rect x="85.1759%" y="309" width="0.2513%" height="15" fill="rgb(227,149,46)" fg:x="339" fg:w="1"/><text x="85.4259%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="85.1759%" y="293" width="0.2513%" height="15" fill="rgb(218,36,50)" fg:x="339" fg:w="1"/><text x="85.4259%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.25%)</title><rect x="85.1759%" y="277" width="0.2513%" height="15" fill="rgb(226,80,48)" fg:x="339" fg:w="1"/><text x="85.4259%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.25%)</title><rect x="85.1759%" y="261" width="0.2513%" height="15" fill="rgb(238,224,15)" fg:x="339" fg:w="1"/><text x="85.4259%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.25%)</title><rect x="85.1759%" y="245" width="0.2513%" height="15" fill="rgb(241,136,10)" fg:x="339" fg:w="1"/><text x="85.4259%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.25%)</title><rect x="85.1759%" y="229" width="0.2513%" height="15" fill="rgb(208,32,45)" fg:x="339" fg:w="1"/><text x="85.4259%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="85.1759%" y="213" width="0.2513%" height="15" fill="rgb(207,135,9)" fg:x="339" fg:w="1"/><text x="85.4259%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.25%)</title><rect x="85.1759%" y="197" width="0.2513%" height="15" fill="rgb(206,86,44)" fg:x="339" fg:w="1"/><text x="85.4259%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="85.1759%" y="181" width="0.2513%" height="15" fill="rgb(245,177,15)" fg:x="339" fg:w="1"/><text x="85.4259%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.25%)</title><rect x="85.1759%" y="165" width="0.2513%" height="15" fill="rgb(206,64,50)" fg:x="339" fg:w="1"/><text x="85.4259%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.25%)</title><rect x="85.1759%" y="149" width="0.2513%" height="15" fill="rgb(234,36,40)" fg:x="339" fg:w="1"/><text x="85.4259%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.25%)</title><rect x="85.1759%" y="133" width="0.2513%" height="15" fill="rgb(213,64,8)" fg:x="339" fg:w="1"/><text x="85.4259%" y="143.50"></text></g><g><title>realloc (1 samples, 0.25%)</title><rect x="85.1759%" y="117" width="0.2513%" height="15" fill="rgb(210,75,36)" fg:x="339" fg:w="1"/><text x="85.4259%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.1759%" y="101" width="0.2513%" height="15" fill="rgb(229,88,21)" fg:x="339" fg:w="1"/><text x="85.4259%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.1759%" y="85" width="0.2513%" height="15" fill="rgb(252,204,47)" fg:x="339" fg:w="1"/><text x="85.4259%" y="95.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.1759%" y="69" width="0.2513%" height="15" fill="rgb(208,77,27)" fg:x="339" fg:w="1"/><text x="85.4259%" y="79.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_constant_expr (1 samples, 0.25%)</title><rect x="85.4271%" y="293" width="0.2513%" height="15" fill="rgb(221,76,26)" fg:x="340" fg:w="1"/><text x="85.6771%" y="303.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_constant_composite (1 samples, 0.25%)</title><rect x="85.4271%" y="277" width="0.2513%" height="15" fill="rgb(225,139,18)" fg:x="340" fg:w="1"/><text x="85.6771%" y="287.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_constant_composite (1 samples, 0.25%)</title><rect x="85.4271%" y="261" width="0.2513%" height="15" fill="rgb(230,137,11)" fg:x="340" fg:w="1"/><text x="85.6771%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;naga::back::spv::Instruction&gt; (1 samples, 0.25%)</title><rect x="85.4271%" y="245" width="0.2513%" height="15" fill="rgb(212,28,1)" fg:x="340" fg:w="1"/><text x="85.6771%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.25%)</title><rect x="85.4271%" y="229" width="0.2513%" height="15" fill="rgb(248,164,17)" fg:x="340" fg:w="1"/><text x="85.6771%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.25%)</title><rect x="85.4271%" y="213" width="0.2513%" height="15" fill="rgb(222,171,42)" fg:x="340" fg:w="1"/><text x="85.6771%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="85.4271%" y="197" width="0.2513%" height="15" fill="rgb(243,84,45)" fg:x="340" fg:w="1"/><text x="85.6771%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.25%)</title><rect x="85.4271%" y="181" width="0.2513%" height="15" fill="rgb(252,49,23)" fg:x="340" fg:w="1"/><text x="85.6771%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.25%)</title><rect x="85.4271%" y="165" width="0.2513%" height="15" fill="rgb(215,19,7)" fg:x="340" fg:w="1"/><text x="85.6771%" y="175.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="85.4271%" y="149" width="0.2513%" height="15" fill="rgb(238,81,41)" fg:x="340" fg:w="1"/><text x="85.6771%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.4271%" y="133" width="0.2513%" height="15" fill="rgb(210,199,37)" fg:x="340" fg:w="1"/><text x="85.6771%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.4271%" y="117" width="0.2513%" height="15" fill="rgb(244,192,49)" fg:x="340" fg:w="1"/><text x="85.6771%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="85.4271%" y="101" width="0.2513%" height="15" fill="rgb(226,211,11)" fg:x="340" fg:w="1"/><text x="85.6771%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;naga::back::spv::Function&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="261" width="0.2513%" height="15" fill="rgb(236,162,54)" fg:x="341" fg:w="1"/><text x="85.9284%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;naga::back::spv::TerminatedBlock&gt;&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="245" width="0.2513%" height="15" fill="rgb(220,229,9)" fg:x="341" fg:w="1"/><text x="85.9284%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="85.6784%" y="229" width="0.2513%" height="15" fill="rgb(250,87,22)" fg:x="341" fg:w="1"/><text x="85.9284%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[naga::back::spv::TerminatedBlock]&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="213" width="0.2513%" height="15" fill="rgb(239,43,17)" fg:x="341" fg:w="1"/><text x="85.9284%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;naga::back::spv::TerminatedBlock&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="197" width="0.2513%" height="15" fill="rgb(231,177,25)" fg:x="341" fg:w="1"/><text x="85.9284%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;naga::back::spv::Instruction&gt;&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="181" width="0.2513%" height="15" fill="rgb(219,179,1)" fg:x="341" fg:w="1"/><text x="85.9284%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="85.6784%" y="165" width="0.2513%" height="15" fill="rgb(238,219,53)" fg:x="341" fg:w="1"/><text x="85.9284%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[naga::back::spv::Instruction]&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="149" width="0.2513%" height="15" fill="rgb(232,167,36)" fg:x="341" fg:w="1"/><text x="85.9284%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;naga::back::spv::Instruction&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="133" width="0.2513%" height="15" fill="rgb(244,19,51)" fg:x="341" fg:w="1"/><text x="85.9284%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="117" width="0.2513%" height="15" fill="rgb(224,6,22)" fg:x="341" fg:w="1"/><text x="85.9284%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.25%)</title><rect x="85.6784%" y="101" width="0.2513%" height="15" fill="rgb(224,145,5)" fg:x="341" fg:w="1"/><text x="85.9284%" y="111.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="85.6784%" y="85" width="0.2513%" height="15" fill="rgb(234,130,49)" fg:x="341" fg:w="1"/><text x="85.9284%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.25%)</title><rect x="85.6784%" y="69" width="0.2513%" height="15" fill="rgb(254,6,2)" fg:x="341" fg:w="1"/><text x="85.9284%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.25%)</title><rect x="85.6784%" y="53" width="0.2513%" height="15" fill="rgb(208,96,46)" fg:x="341" fg:w="1"/><text x="85.9284%" y="63.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="85.6784%" y="37" width="0.2513%" height="15" fill="rgb(239,3,39)" fg:x="341" fg:w="1"/><text x="85.9284%" y="47.50"></text></g><g><title>&lt;naga::back::spv::CachedExpressions as core::ops::index::IndexMut&lt;naga::arena::Handle&lt;naga::Expression&gt;&gt;&gt;::index_mut (1 samples, 0.25%)</title><rect x="85.9296%" y="245" width="0.2513%" height="15" fill="rgb(233,210,1)" fg:x="342" fg:w="1"/><text x="86.1796%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.25%)</title><rect x="86.1809%" y="165" width="0.2513%" height="15" fill="rgb(244,137,37)" fg:x="343" fg:w="1"/><text x="86.4309%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.25%)</title><rect x="86.1809%" y="149" width="0.2513%" height="15" fill="rgb(240,136,2)" fg:x="343" fg:w="1"/><text x="86.4309%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.25%)</title><rect x="86.1809%" y="133" width="0.2513%" height="15" fill="rgb(239,18,37)" fg:x="343" fg:w="1"/><text x="86.4309%" y="143.50"></text></g><g><title>&lt;naga::back::spv::LookupType as core::hash::Hash&gt;::hash (1 samples, 0.25%)</title><rect x="86.1809%" y="117" width="0.2513%" height="15" fill="rgb(218,185,22)" fg:x="343" fg:w="1"/><text x="86.4309%" y="127.50"></text></g><g><title>naga::back::spv::BlockContext::get_expression_type_id (2 samples, 0.50%)</title><rect x="86.1809%" y="245" width="0.5025%" height="15" fill="rgb(225,218,4)" fg:x="343" fg:w="2"/><text x="86.4309%" y="255.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_expression_type_id (2 samples, 0.50%)</title><rect x="86.1809%" y="229" width="0.5025%" height="15" fill="rgb(230,182,32)" fg:x="343" fg:w="2"/><text x="86.4309%" y="239.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_type_id (2 samples, 0.50%)</title><rect x="86.1809%" y="213" width="0.5025%" height="15" fill="rgb(242,56,43)" fg:x="343" fg:w="2"/><text x="86.4309%" y="223.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.50%)</title><rect x="86.1809%" y="197" width="0.5025%" height="15" fill="rgb(233,99,24)" fg:x="343" fg:w="2"/><text x="86.4309%" y="207.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.50%)</title><rect x="86.1809%" y="181" width="0.5025%" height="15" fill="rgb(234,209,42)" fg:x="343" fg:w="2"/><text x="86.4309%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.25%)</title><rect x="86.4322%" y="165" width="0.2513%" height="15" fill="rgb(227,7,12)" fg:x="344" fg:w="1"/><text x="86.6822%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.25%)</title><rect x="86.4322%" y="149" width="0.2513%" height="15" fill="rgb(245,203,43)" fg:x="344" fg:w="1"/><text x="86.6822%" y="159.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="86.4322%" y="133" width="0.2513%" height="15" fill="rgb(238,205,33)" fg:x="344" fg:w="1"/><text x="86.6822%" y="143.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.25%)</title><rect x="86.4322%" y="117" width="0.2513%" height="15" fill="rgb(231,56,7)" fg:x="344" fg:w="1"/><text x="86.6822%" y="127.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::cache_expression_value (4 samples, 1.01%)</title><rect x="85.9296%" y="261" width="1.0050%" height="15" fill="rgb(244,186,29)" fg:x="342" fg:w="4"/><text x="86.1796%" y="271.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_constant_scalar (1 samples, 0.25%)</title><rect x="86.6834%" y="245" width="0.2513%" height="15" fill="rgb(234,111,31)" fg:x="345" fg:w="1"/><text x="86.9334%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.25%)</title><rect x="86.6834%" y="229" width="0.2513%" height="15" fill="rgb(241,149,10)" fg:x="345" fg:w="1"/><text x="86.9334%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.25%)</title><rect x="86.6834%" y="213" width="0.2513%" height="15" fill="rgb(249,206,44)" fg:x="345" fg:w="1"/><text x="86.9334%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.25%)</title><rect x="86.6834%" y="197" width="0.2513%" height="15" fill="rgb(251,153,30)" fg:x="345" fg:w="1"/><text x="86.9334%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.25%)</title><rect x="86.6834%" y="181" width="0.2513%" height="15" fill="rgb(239,152,38)" fg:x="345" fg:w="1"/><text x="86.9334%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.25%)</title><rect x="86.6834%" y="165" width="0.2513%" height="15" fill="rgb(249,139,47)" fg:x="345" fg:w="1"/><text x="86.9334%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.25%)</title><rect x="86.6834%" y="149" width="0.2513%" height="15" fill="rgb(244,64,35)" fg:x="345" fg:w="1"/><text x="86.9334%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.25%)</title><rect x="86.6834%" y="133" width="0.2513%" height="15" fill="rgb(216,46,15)" fg:x="345" fg:w="1"/><text x="86.9334%" y="143.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.25%)</title><rect x="86.6834%" y="117" width="0.2513%" height="15" fill="rgb(250,74,19)" fg:x="345" fg:w="1"/><text x="86.9334%" y="127.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.25%)</title><rect x="86.6834%" y="101" width="0.2513%" height="15" fill="rgb(249,42,33)" fg:x="345" fg:w="1"/><text x="86.9334%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.25%)</title><rect x="86.6834%" y="85" width="0.2513%" height="15" fill="rgb(242,149,17)" fg:x="345" fg:w="1"/><text x="86.9334%" y="95.50"></text></g><g><title>&lt;naga::back::spv::CachedConstant as core::cmp::PartialEq&gt;::eq (1 samples, 0.25%)</title><rect x="86.6834%" y="69" width="0.2513%" height="15" fill="rgb(244,29,21)" fg:x="345" fg:w="1"/><text x="86.9334%" y="79.50"></text></g><g><title>naga::proc::&lt;impl core::cmp::PartialEq for naga::Literal&gt;::eq (1 samples, 0.25%)</title><rect x="86.6834%" y="53" width="0.2513%" height="15" fill="rgb(220,130,37)" fg:x="345" fg:w="1"/><text x="86.9334%" y="63.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::cache_expression_value (1 samples, 0.25%)</title><rect x="86.9347%" y="213" width="0.2513%" height="15" fill="rgb(211,67,2)" fg:x="346" fg:w="1"/><text x="87.1847%" y="223.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_expression_pointer (1 samples, 0.25%)</title><rect x="86.9347%" y="197" width="0.2513%" height="15" fill="rgb(235,68,52)" fg:x="346" fg:w="1"/><text x="87.1847%" y="207.50"></text></g><g><title>naga::back::spv::index::&lt;impl naga::back::spv::BlockContext&gt;::write_bounds_check (1 samples, 0.25%)</title><rect x="86.9347%" y="181" width="0.2513%" height="15" fill="rgb(246,142,3)" fg:x="346" fg:w="1"/><text x="87.1847%" y="191.50"></text></g><g><title>naga::back::spv::index::&lt;impl naga::back::spv::BlockContext&gt;::write_restricted_index (1 samples, 0.25%)</title><rect x="86.9347%" y="165" width="0.2513%" height="15" fill="rgb(241,25,7)" fg:x="346" fg:w="1"/><text x="87.1847%" y="175.50"></text></g><g><title>naga::back::spv::index::&lt;impl naga::back::spv::BlockContext&gt;::write_sequence_max_index (1 samples, 0.25%)</title><rect x="86.9347%" y="149" width="0.2513%" height="15" fill="rgb(242,119,39)" fg:x="346" fg:w="1"/><text x="87.1847%" y="159.50"></text></g><g><title>naga::back::spv::index::&lt;impl naga::back::spv::BlockContext&gt;::write_sequence_length (1 samples, 0.25%)</title><rect x="86.9347%" y="133" width="0.2513%" height="15" fill="rgb(241,98,45)" fg:x="346" fg:w="1"/><text x="87.1847%" y="143.50"></text></g><g><title>naga::proc::index::&lt;impl naga::TypeInner&gt;::indexable_length (1 samples, 0.25%)</title><rect x="86.9347%" y="117" width="0.2513%" height="15" fill="rgb(254,28,30)" fg:x="346" fg:w="1"/><text x="87.1847%" y="127.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (2 samples, 0.50%)</title><rect x="86.9347%" y="245" width="0.5025%" height="15" fill="rgb(241,142,54)" fg:x="346" fg:w="2"/><text x="87.1847%" y="255.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (2 samples, 0.50%)</title><rect x="86.9347%" y="229" width="0.5025%" height="15" fill="rgb(222,85,15)" fg:x="346" fg:w="2"/><text x="87.1847%" y="239.50"></text></g><g><title>naga::back::spv::instructions::&lt;impl naga::back::spv::Instruction&gt;::branch (1 samples, 0.25%)</title><rect x="87.1859%" y="213" width="0.2513%" height="15" fill="rgb(210,85,47)" fg:x="347" fg:w="1"/><text x="87.4359%" y="223.50"></text></g><g><title>naga::back::spv::layout::&lt;impl naga::back::spv::Instruction&gt;::add_operand (1 samples, 0.25%)</title><rect x="87.1859%" y="197" width="0.2513%" height="15" fill="rgb(224,206,25)" fg:x="347" fg:w="1"/><text x="87.4359%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.25%)</title><rect x="87.1859%" y="181" width="0.2513%" height="15" fill="rgb(243,201,19)" fg:x="347" fg:w="1"/><text x="87.4359%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.25%)</title><rect x="87.1859%" y="165" width="0.2513%" height="15" fill="rgb(236,59,4)" fg:x="347" fg:w="1"/><text x="87.4359%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.25%)</title><rect x="87.1859%" y="149" width="0.2513%" height="15" fill="rgb(254,179,45)" fg:x="347" fg:w="1"/><text x="87.4359%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="87.1859%" y="133" width="0.2513%" height="15" fill="rgb(226,14,10)" fg:x="347" fg:w="1"/><text x="87.4359%" y="143.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="87.1859%" y="117" width="0.2513%" height="15" fill="rgb(244,27,41)" fg:x="347" fg:w="1"/><text x="87.4359%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="87.1859%" y="101" width="0.2513%" height="15" fill="rgb(235,35,32)" fg:x="347" fg:w="1"/><text x="87.4359%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.25%)</title><rect x="87.4372%" y="197" width="0.2513%" height="15" fill="rgb(218,68,31)" fg:x="348" fg:w="1"/><text x="87.6872%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.25%)</title><rect x="87.4372%" y="181" width="0.2513%" height="15" fill="rgb(207,120,37)" fg:x="348" fg:w="1"/><text x="87.6872%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="87.4372%" y="165" width="0.2513%" height="15" fill="rgb(227,98,0)" fg:x="348" fg:w="1"/><text x="87.6872%" y="175.50"></text></g><g><title>malloc (1 samples, 0.25%)</title><rect x="87.4372%" y="149" width="0.2513%" height="15" fill="rgb(207,7,3)" fg:x="348" fg:w="1"/><text x="87.6872%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="87.4372%" y="133" width="0.2513%" height="15" fill="rgb(206,98,19)" fg:x="348" fg:w="1"/><text x="87.6872%" y="143.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (4 samples, 1.01%)</title><rect x="86.9347%" y="261" width="1.0050%" height="15" fill="rgb(217,5,26)" fg:x="346" fg:w="4"/><text x="87.1847%" y="271.50"></text></g><g><title>naga::back::spv::instructions::&lt;impl naga::back::spv::Instruction&gt;::function_call (2 samples, 0.50%)</title><rect x="87.4372%" y="245" width="0.5025%" height="15" fill="rgb(235,190,38)" fg:x="348" fg:w="2"/><text x="87.6872%" y="255.50"></text></g><g><title>naga::back::spv::layout::&lt;impl naga::back::spv::Instruction&gt;::add_operand (2 samples, 0.50%)</title><rect x="87.4372%" y="229" width="0.5025%" height="15" fill="rgb(247,86,24)" fg:x="348" fg:w="2"/><text x="87.6872%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.50%)</title><rect x="87.4372%" y="213" width="0.5025%" height="15" fill="rgb(205,101,16)" fg:x="348" fg:w="2"/><text x="87.6872%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.25%)</title><rect x="87.6884%" y="197" width="0.2513%" height="15" fill="rgb(246,168,33)" fg:x="349" fg:w="1"/><text x="87.9384%" y="207.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_pointer_id (1 samples, 0.25%)</title><rect x="87.9397%" y="261" width="0.2513%" height="15" fill="rgb(231,114,1)" fg:x="350" fg:w="1"/><text x="88.1897%" y="271.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::get_type_id (1 samples, 0.25%)</title><rect x="87.9397%" y="245" width="0.2513%" height="15" fill="rgb(207,184,53)" fg:x="350" fg:w="1"/><text x="88.1897%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.25%)</title><rect x="87.9397%" y="229" width="0.2513%" height="15" fill="rgb(224,95,51)" fg:x="350" fg:w="1"/><text x="88.1897%" y="239.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.25%)</title><rect x="87.9397%" y="213" width="0.2513%" height="15" fill="rgb(212,188,45)" fg:x="350" fg:w="1"/><text x="88.1897%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.25%)</title><rect x="87.9397%" y="197" width="0.2513%" height="15" fill="rgb(223,154,38)" fg:x="350" fg:w="1"/><text x="88.1897%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.25%)</title><rect x="87.9397%" y="181" width="0.2513%" height="15" fill="rgb(251,22,52)" fg:x="350" fg:w="1"/><text x="88.1897%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="87.9397%" y="165" width="0.2513%" height="15" fill="rgb(229,209,22)" fg:x="350" fg:w="1"/><text x="88.1897%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="88.4422%" y="197" width="0.2513%" height="15" fill="rgb(234,138,34)" fg:x="352" fg:w="1"/><text x="88.6922%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.25%)</title><rect x="88.4422%" y="181" width="0.2513%" height="15" fill="rgb(212,95,11)" fg:x="352" fg:w="1"/><text x="88.6922%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.25%)</title><rect x="88.4422%" y="165" width="0.2513%" height="15" fill="rgb(240,179,47)" fg:x="352" fg:w="1"/><text x="88.6922%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.25%)</title><rect x="88.4422%" y="149" width="0.2513%" height="15" fill="rgb(240,163,11)" fg:x="352" fg:w="1"/><text x="88.6922%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.25%)</title><rect x="88.4422%" y="133" width="0.2513%" height="15" fill="rgb(236,37,12)" fg:x="352" fg:w="1"/><text x="88.6922%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title><rect x="88.4422%" y="117" width="0.2513%" height="15" fill="rgb(232,164,16)" fg:x="352" fg:w="1"/><text x="88.6922%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.25%)</title><rect x="88.4422%" y="101" width="0.2513%" height="15" fill="rgb(244,205,15)" fg:x="352" fg:w="1"/><text x="88.6922%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title><rect x="88.4422%" y="85" width="0.2513%" height="15" fill="rgb(223,117,47)" fg:x="352" fg:w="1"/><text x="88.6922%" y="95.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_entry_point (13 samples, 3.27%)</title><rect x="85.6784%" y="293" width="3.2663%" height="15" fill="rgb(244,107,35)" fg:x="341" fg:w="13"/><text x="85.9284%" y="303.50">nag..</text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_function (13 samples, 3.27%)</title><rect x="85.6784%" y="277" width="3.2663%" height="15" fill="rgb(205,140,8)" fg:x="341" fg:w="13"/><text x="85.9284%" y="287.50">nag..</text></g><g><title>naga::proc::constant_evaluator::ExpressionConstnessTracker::from_arena (3 samples, 0.75%)</title><rect x="88.1910%" y="261" width="0.7538%" height="15" fill="rgb(228,84,46)" fg:x="351" fg:w="3"/><text x="88.4410%" y="271.50"></text></g><g><title>naga::proc::constant_evaluator::ExpressionConstnessTracker::insert (3 samples, 0.75%)</title><rect x="88.1910%" y="245" width="0.7538%" height="15" fill="rgb(254,188,9)" fg:x="351" fg:w="3"/><text x="88.4410%" y="255.50"></text></g><g><title>bit_set::BitSet&lt;B&gt;::insert (3 samples, 0.75%)</title><rect x="88.1910%" y="229" width="0.7538%" height="15" fill="rgb(206,112,54)" fg:x="351" fg:w="3"/><text x="88.4410%" y="239.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (3 samples, 0.75%)</title><rect x="88.1910%" y="213" width="0.7538%" height="15" fill="rgb(216,84,49)" fg:x="351" fg:w="3"/><text x="88.4410%" y="223.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::fix_last_block (1 samples, 0.25%)</title><rect x="88.6935%" y="197" width="0.2513%" height="15" fill="rgb(214,194,35)" fg:x="353" fg:w="1"/><text x="88.9435%" y="207.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::last_block_mut_with_mask (1 samples, 0.25%)</title><rect x="88.6935%" y="181" width="0.2513%" height="15" fill="rgb(249,28,3)" fg:x="353" fg:w="1"/><text x="88.9435%" y="191.50"></text></g><g><title>naga::back::&lt;impl naga::TypeInner&gt;::is_handle (1 samples, 0.25%)</title><rect x="88.9447%" y="277" width="0.2513%" height="15" fill="rgb(222,56,52)" fg:x="354" fg:w="1"/><text x="89.1947%" y="287.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_function (3 samples, 0.75%)</title><rect x="88.9447%" y="293" width="0.7538%" height="15" fill="rgb(245,217,50)" fg:x="354" fg:w="3"/><text x="89.1947%" y="303.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::write_block (2 samples, 0.50%)</title><rect x="89.1960%" y="277" width="0.5025%" height="15" fill="rgb(213,201,24)" fg:x="355" fg:w="2"/><text x="89.4460%" y="287.50"></text></g><g><title>naga::back::spv::block::&lt;impl naga::back::spv::BlockContext&gt;::cache_expression_value (1 samples, 0.25%)</title><rect x="89.4472%" y="261" width="0.2513%" height="15" fill="rgb(248,116,28)" fg:x="356" fg:w="1"/><text x="89.6972%" y="271.50"></text></g><g><title>naga::proc::&lt;impl naga::MathFunction&gt;::argument_count (1 samples, 0.25%)</title><rect x="89.4472%" y="245" width="0.2513%" height="15" fill="rgb(219,72,43)" fg:x="356" fg:w="1"/><text x="89.6972%" y="255.50"></text></g><g><title>naga::back::spv::write_vec (20 samples, 5.03%)</title><rect x="84.9246%" y="341" width="5.0251%" height="15" fill="rgb(209,138,14)" fg:x="338" fg:w="20"/><text x="85.1746%" y="351.50">naga::..</text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write (19 samples, 4.77%)</title><rect x="85.1759%" y="325" width="4.7739%" height="15" fill="rgb(222,18,33)" fg:x="339" fg:w="19"/><text x="85.4259%" y="335.50">naga::..</text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_logical_layout (18 samples, 4.52%)</title><rect x="85.4271%" y="309" width="4.5226%" height="15" fill="rgb(213,199,7)" fg:x="340" fg:w="18"/><text x="85.6771%" y="319.50">naga:..</text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::write_global_variable (1 samples, 0.25%)</title><rect x="89.6985%" y="293" width="0.2513%" height="15" fill="rgb(250,110,10)" fg:x="357" fg:w="1"/><text x="89.9485%" y="303.50"></text></g><g><title>naga::back::spv::writer::&lt;impl naga::back::spv::Writer&gt;::decorate (1 samples, 0.25%)</title><rect x="89.6985%" y="277" width="0.2513%" height="15" fill="rgb(248,123,6)" fg:x="357" fg:w="1"/><text x="89.9485%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.25%)</title><rect x="89.6985%" y="261" width="0.2513%" height="15" fill="rgb(206,91,31)" fg:x="357" fg:w="1"/><text x="89.9485%" y="271.50"></text></g><g><title>wgpu::Device::create_compute_pipeline (27 samples, 6.78%)</title><rect x="83.6683%" y="453" width="6.7839%" height="15" fill="rgb(211,154,13)" fg:x="333" fg:w="27"/><text x="83.9183%" y="463.50">wgpu::Dev..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_compute_pipeline (27 samples, 6.78%)</title><rect x="83.6683%" y="437" width="6.7839%" height="15" fill="rgb(225,148,7)" fg:x="333" fg:w="27"/><text x="83.9183%" y="447.50">&lt;T as wgp..</text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_compute_pipeline (27 samples, 6.78%)</title><rect x="83.6683%" y="421" width="6.7839%" height="15" fill="rgb(220,160,43)" fg:x="333" fg:w="27"/><text x="83.9183%" y="431.50">&lt;wgpu::ba..</text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_compute_pipeline (27 samples, 6.78%)</title><rect x="83.6683%" y="405" width="6.7839%" height="15" fill="rgb(213,52,39)" fg:x="333" fg:w="27"/><text x="83.9183%" y="415.50">wgpu_core..</text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::create_compute_pipeline (27 samples, 6.78%)</title><rect x="83.6683%" y="389" width="6.7839%" height="15" fill="rgb(243,137,7)" fg:x="333" fg:w="27"/><text x="83.9183%" y="399.50">wgpu_core..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_compute_pipeline (26 samples, 6.53%)</title><rect x="83.9196%" y="373" width="6.5327%" height="15" fill="rgb(230,79,13)" fg:x="334" fg:w="26"/><text x="84.1696%" y="383.50">wgpu_hal:..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::compile_stage (23 samples, 5.78%)</title><rect x="84.6734%" y="357" width="5.7789%" height="15" fill="rgb(247,105,23)" fg:x="337" fg:w="23"/><text x="84.9234%" y="367.50">wgpu_ha..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_shader_module_impl (2 samples, 0.50%)</title><rect x="89.9497%" y="341" width="0.5025%" height="15" fill="rgb(223,179,41)" fg:x="358" fg:w="2"/><text x="90.1997%" y="351.50"></text></g><g><title>ash::device::Device::create_shader_module (2 samples, 0.50%)</title><rect x="89.9497%" y="325" width="0.5025%" height="15" fill="rgb(218,9,34)" fg:x="358" fg:w="2"/><text x="90.1997%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.50%)</title><rect x="89.9497%" y="309" width="0.5025%" height="15" fill="rgb(222,106,8)" fg:x="358" fg:w="2"/><text x="90.1997%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.50%)</title><rect x="89.9497%" y="293" width="0.5025%" height="15" fill="rgb(211,220,0)" fg:x="358" fg:w="2"/><text x="90.1997%" y="303.50"></text></g><g><title>wgpu::Device::create_pipeline_layout (1 samples, 0.25%)</title><rect x="90.4523%" y="453" width="0.2513%" height="15" fill="rgb(229,52,16)" fg:x="360" fg:w="1"/><text x="90.7023%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_pipeline_layout (1 samples, 0.25%)</title><rect x="90.4523%" y="437" width="0.2513%" height="15" fill="rgb(212,155,18)" fg:x="360" fg:w="1"/><text x="90.7023%" y="447.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_pipeline_layout (1 samples, 0.25%)</title><rect x="90.4523%" y="421" width="0.2513%" height="15" fill="rgb(242,21,14)" fg:x="360" fg:w="1"/><text x="90.7023%" y="431.50"></text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_pipeline_layout (1 samples, 0.25%)</title><rect x="90.4523%" y="405" width="0.2513%" height="15" fill="rgb(222,19,48)" fg:x="360" fg:w="1"/><text x="90.7023%" y="415.50"></text></g><g><title>wgpu_core::registry::FutureId&lt;I,T&gt;::assign (1 samples, 0.25%)</title><rect x="90.4523%" y="389" width="0.2513%" height="15" fill="rgb(232,45,27)" fg:x="360" fg:w="1"/><text x="90.7023%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::registry::FutureId&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::PipelineLayout&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::binding_model::PipelineLayout&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="90.4523%" y="373" width="0.2513%" height="15" fill="rgb(249,103,42)" fg:x="360" fg:w="1"/><text x="90.7023%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::PipelineLayout&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="90.4523%" y="357" width="0.2513%" height="15" fill="rgb(246,81,33)" fg:x="360" fg:w="1"/><text x="90.7023%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="90.4523%" y="341" width="0.2513%" height="15" fill="rgb(252,33,42)" fg:x="360" fg:w="1"/><text x="90.7023%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.25%)</title><rect x="90.4523%" y="325" width="0.2513%" height="15" fill="rgb(209,212,41)" fg:x="360" fg:w="1"/><text x="90.7023%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.25%)</title><rect x="90.4523%" y="309" width="0.2513%" height="15" fill="rgb(207,154,6)" fg:x="360" fg:w="1"/><text x="90.7023%" y="319.50"></text></g><g><title>wgpu_core::device::UserClosures::fire (3 samples, 0.75%)</title><rect x="90.7035%" y="389" width="0.7538%" height="15" fill="rgb(223,64,47)" fg:x="361" fg:w="3"/><text x="90.9535%" y="399.50"></text></g><g><title>wgpu_core::resource::BufferMapCallback::call (2 samples, 0.50%)</title><rect x="90.9548%" y="373" width="0.5025%" height="15" fill="rgb(211,161,38)" fg:x="362" fg:w="2"/><text x="91.2048%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.50%)</title><rect x="90.9548%" y="357" width="0.5025%" height="15" fill="rgb(219,138,40)" fg:x="362" fg:w="2"/><text x="91.2048%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.50%)</title><rect x="90.9548%" y="341" width="0.5025%" height="15" fill="rgb(241,228,46)" fg:x="362" fg:w="2"/><text x="91.2048%" y="351.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_map_async::_{{closure}} (1 samples, 0.25%)</title><rect x="91.2060%" y="325" width="0.2513%" height="15" fill="rgb(223,209,38)" fg:x="363" fg:w="1"/><text x="91.4560%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.25%)</title><rect x="91.2060%" y="309" width="0.2513%" height="15" fill="rgb(236,164,45)" fg:x="363" fg:w="1"/><text x="91.4560%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.25%)</title><rect x="91.2060%" y="293" width="0.2513%" height="15" fill="rgb(231,15,5)" fg:x="363" fg:w="1"/><text x="91.4560%" y="303.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::handle_mapping (1 samples, 0.25%)</title><rect x="91.4573%" y="373" width="0.2513%" height="15" fill="rgb(252,35,15)" fg:x="364" fg:w="1"/><text x="91.7073%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="91.4573%" y="357" width="0.2513%" height="15" fill="rgb(248,181,18)" fg:x="364" fg:w="1"/><text x="91.7073%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="91.4573%" y="341" width="0.2513%" height="15" fill="rgb(233,39,42)" fg:x="364" fg:w="1"/><text x="91.7073%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="91.7085%" y="325" width="0.2513%" height="15" fill="rgb(238,110,33)" fg:x="365" fg:w="1"/><text x="91.9585%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.25%)</title><rect x="91.7085%" y="309" width="0.2513%" height="15" fill="rgb(233,195,10)" fg:x="365" fg:w="1"/><text x="91.9585%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.25%)</title><rect x="91.7085%" y="293" width="0.2513%" height="15" fill="rgb(254,105,3)" fg:x="365" fg:w="1"/><text x="91.9585%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.25%)</title><rect x="91.7085%" y="277" width="0.2513%" height="15" fill="rgb(221,225,9)" fg:x="365" fg:w="1"/><text x="91.9585%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.25%)</title><rect x="91.7085%" y="261" width="0.2513%" height="15" fill="rgb(224,227,45)" fg:x="365" fg:w="1"/><text x="91.9585%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.25%)</title><rect x="91.7085%" y="245" width="0.2513%" height="15" fill="rgb(229,198,43)" fg:x="365" fg:w="1"/><text x="91.9585%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;wgpu_hal::vulkan::CommandBuffer&gt;&gt; (1 samples, 0.25%)</title><rect x="91.7085%" y="229" width="0.2513%" height="15" fill="rgb(206,209,35)" fg:x="365" fg:w="1"/><text x="91.9585%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="91.7085%" y="213" width="0.2513%" height="15" fill="rgb(245,195,53)" fg:x="365" fg:w="1"/><text x="91.9585%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu_hal::vulkan::CommandBuffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.25%)</title><rect x="91.7085%" y="197" width="0.2513%" height="15" fill="rgb(240,92,26)" fg:x="365" fg:w="1"/><text x="91.9585%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="91.7085%" y="181" width="0.2513%" height="15" fill="rgb(207,40,23)" fg:x="365" fg:w="1"/><text x="91.9585%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_hal::vulkan::CommandBuffer&gt;&gt; (1 samples, 0.25%)</title><rect x="91.7085%" y="165" width="0.2513%" height="15" fill="rgb(223,111,35)" fg:x="365" fg:w="1"/><text x="91.9585%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="91.7085%" y="149" width="0.2513%" height="15" fill="rgb(229,147,28)" fg:x="365" fg:w="1"/><text x="91.9585%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.25%)</title><rect x="91.7085%" y="133" width="0.2513%" height="15" fill="rgb(211,29,28)" fg:x="365" fg:w="1"/><text x="91.9585%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.25%)</title><rect x="91.7085%" y="117" width="0.2513%" height="15" fill="rgb(228,72,33)" fg:x="365" fg:w="1"/><text x="91.9585%" y="127.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="91.7085%" y="101" width="0.2513%" height="15" fill="rgb(205,214,31)" fg:x="365" fg:w="1"/><text x="91.9585%" y="111.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (2 samples, 0.50%)</title><rect x="91.7085%" y="373" width="0.5025%" height="15" fill="rgb(224,111,15)" fg:x="365" fg:w="2"/><text x="91.9585%" y="383.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (2 samples, 0.50%)</title><rect x="91.7085%" y="357" width="0.5025%" height="15" fill="rgb(253,21,26)" fg:x="365" fg:w="2"/><text x="91.9585%" y="367.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (2 samples, 0.50%)</title><rect x="91.7085%" y="341" width="0.5025%" height="15" fill="rgb(245,139,43)" fg:x="365" fg:w="2"/><text x="91.9585%" y="351.50"></text></g><g><title>ash::device::Device::reset_command_pool (1 samples, 0.25%)</title><rect x="91.9598%" y="325" width="0.2513%" height="15" fill="rgb(252,170,7)" fg:x="366" fg:w="1"/><text x="92.2098%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="91.9598%" y="309" width="0.2513%" height="15" fill="rgb(231,118,14)" fg:x="366" fg:w="1"/><text x="92.2098%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="91.9598%" y="293" width="0.2513%" height="15" fill="rgb(238,83,0)" fg:x="366" fg:w="1"/><text x="92.2098%" y="303.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected_bind_group_layouts (1 samples, 0.25%)</title><rect x="92.2111%" y="357" width="0.2513%" height="15" fill="rgb(221,39,39)" fg:x="367" fg:w="1"/><text x="92.4611%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.25%)</title><rect x="92.2111%" y="341" width="0.2513%" height="15" fill="rgb(222,119,46)" fg:x="367" fg:w="1"/><text x="92.4611%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.25%)</title><rect x="92.2111%" y="325" width="0.2513%" height="15" fill="rgb(222,165,49)" fg:x="367" fg:w="1"/><text x="92.4611%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.25%)</title><rect x="92.2111%" y="309" width="0.2513%" height="15" fill="rgb(219,113,52)" fg:x="367" fg:w="1"/><text x="92.4611%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.25%)</title><rect x="92.2111%" y="293" width="0.2513%" height="15" fill="rgb(214,7,15)" fg:x="367" fg:w="1"/><text x="92.4611%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.25%)</title><rect x="92.2111%" y="277" width="0.2513%" height="15" fill="rgb(235,32,4)" fg:x="367" fg:w="1"/><text x="92.4611%" y="287.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (2 samples, 0.50%)</title><rect x="92.2111%" y="373" width="0.5025%" height="15" fill="rgb(238,90,54)" fg:x="367" fg:w="2"/><text x="92.4611%" y="383.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected_pipeline_layouts (1 samples, 0.25%)</title><rect x="92.4623%" y="357" width="0.2513%" height="15" fill="rgb(213,208,19)" fg:x="368" fg:w="1"/><text x="92.7123%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::retain (1 samples, 0.25%)</title><rect x="92.4623%" y="341" width="0.2513%" height="15" fill="rgb(233,156,4)" fg:x="368" fg:w="1"/><text x="92.7123%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (1 samples, 0.25%)</title><rect x="92.4623%" y="325" width="0.2513%" height="15" fill="rgb(207,194,5)" fg:x="368" fg:w="1"/><text x="92.7123%" y="335.50"></text></g><g><title>wgpu_core::device::life::ResourceMaps&lt;A&gt;::extend (1 samples, 0.25%)</title><rect x="92.7136%" y="373" width="0.2513%" height="15" fill="rgb(206,111,30)" fg:x="369" fg:w="1"/><text x="92.9636%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="92.7136%" y="357" width="0.2513%" height="15" fill="rgb(243,70,54)" fg:x="369" fg:w="1"/><text x="92.9636%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.25%)</title><rect x="92.7136%" y="341" width="0.2513%" height="15" fill="rgb(242,28,8)" fg:x="369" fg:w="1"/><text x="92.9636%" y="351.50"></text></g><g><title>wgpu_core::device::life::ResourceMaps&lt;A&gt;::new (1 samples, 0.25%)</title><rect x="92.9648%" y="373" width="0.2513%" height="15" fill="rgb(219,106,18)" fg:x="370" fg:w="1"/><text x="93.2148%" y="383.50"></text></g><g><title>wgpu::Device::poll (13 samples, 3.27%)</title><rect x="90.7035%" y="453" width="3.2663%" height="15" fill="rgb(244,222,10)" fg:x="361" fg:w="13"/><text x="90.9535%" y="463.50">wgp..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_poll (13 samples, 3.27%)</title><rect x="90.7035%" y="437" width="3.2663%" height="15" fill="rgb(236,179,52)" fg:x="361" fg:w="13"/><text x="90.9535%" y="447.50">&lt;T ..</text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_poll (13 samples, 3.27%)</title><rect x="90.7035%" y="421" width="3.2663%" height="15" fill="rgb(213,23,39)" fg:x="361" fg:w="13"/><text x="90.9535%" y="431.50">&lt;wg..</text></g><g><title>wgpu_core::device::global::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_poll (13 samples, 3.27%)</title><rect x="90.7035%" y="405" width="3.2663%" height="15" fill="rgb(238,48,10)" fg:x="361" fg:w="13"/><text x="90.9535%" y="415.50">wgp..</text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (10 samples, 2.51%)</title><rect x="91.4573%" y="389" width="2.5126%" height="15" fill="rgb(251,196,23)" fg:x="364" fg:w="10"/><text x="91.7073%" y="399.50">wg..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::wait (3 samples, 0.75%)</title><rect x="93.2161%" y="373" width="0.7538%" height="15" fill="rgb(250,152,24)" fg:x="371" fg:w="3"/><text x="93.4661%" y="383.50"></text></g><g><title>ash::device::Device::wait_semaphores (3 samples, 0.75%)</title><rect x="93.2161%" y="357" width="0.7538%" height="15" fill="rgb(209,150,17)" fg:x="371" fg:w="3"/><text x="93.4661%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.75%)</title><rect x="93.2161%" y="341" width="0.7538%" height="15" fill="rgb(234,202,34)" fg:x="371" fg:w="3"/><text x="93.4661%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.50%)</title><rect x="93.4673%" y="325" width="0.5025%" height="15" fill="rgb(253,148,53)" fg:x="372" fg:w="2"/><text x="93.7173%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.50%)</title><rect x="93.4673%" y="309" width="0.5025%" height="15" fill="rgb(218,129,16)" fg:x="372" fg:w="2"/><text x="93.7173%" y="319.50"></text></g><g><title>drmSyncobjTimelineWait (1 samples, 0.25%)</title><rect x="93.7186%" y="293" width="0.2513%" height="15" fill="rgb(216,85,19)" fg:x="373" fg:w="1"/><text x="93.9686%" y="303.50"></text></g><g><title>drmIoctl (1 samples, 0.25%)</title><rect x="93.7186%" y="277" width="0.2513%" height="15" fill="rgb(235,228,7)" fg:x="373" fg:w="1"/><text x="93.9686%" y="287.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (4 samples, 1.01%)</title><rect x="93.9698%" y="389" width="1.0050%" height="15" fill="rgb(245,175,0)" fg:x="374" fg:w="4"/><text x="94.2198%" y="399.50"></text></g><g><title>ash::device::Device::queue_submit (4 samples, 1.01%)</title><rect x="93.9698%" y="373" width="1.0050%" height="15" fill="rgb(208,168,36)" fg:x="374" fg:w="4"/><text x="94.2198%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 1.01%)</title><rect x="93.9698%" y="357" width="1.0050%" height="15" fill="rgb(246,171,24)" fg:x="374" fg:w="4"/><text x="94.2198%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 1.01%)</title><rect x="93.9698%" y="341" width="1.0050%" height="15" fill="rgb(215,142,24)" fg:x="374" fg:w="4"/><text x="94.2198%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 1.01%)</title><rect x="93.9698%" y="325" width="1.0050%" height="15" fill="rgb(250,187,7)" fg:x="374" fg:w="4"/><text x="94.2198%" y="335.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 1.01%)</title><rect x="93.9698%" y="309" width="1.0050%" height="15" fill="rgb(228,66,33)" fg:x="374" fg:w="4"/><text x="94.2198%" y="319.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.50%)</title><rect x="94.4724%" y="293" width="0.5025%" height="15" fill="rgb(234,215,21)" fg:x="376" fg:w="2"/><text x="94.7224%" y="303.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="94.7236%" y="277" width="0.2513%" height="15" fill="rgb(222,191,20)" fg:x="377" fg:w="1"/><text x="94.9736%" y="287.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="94.7236%" y="261" width="0.2513%" height="15" fill="rgb(245,79,54)" fg:x="377" fg:w="1"/><text x="94.9736%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;wgpu_core::resource::Sampler&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="94.9749%" y="389" width="0.2513%" height="15" fill="rgb(240,10,37)" fg:x="378" fg:w="1"/><text x="95.2249%" y="399.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (1 samples, 0.25%)</title><rect x="95.2261%" y="389" width="0.2513%" height="15" fill="rgb(214,192,32)" fg:x="379" fg:w="1"/><text x="95.4761%" y="399.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (1 samples, 0.25%)</title><rect x="95.2261%" y="373" width="0.2513%" height="15" fill="rgb(209,36,54)" fg:x="379" fg:w="1"/><text x="95.4761%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="95.2261%" y="357" width="0.2513%" height="15" fill="rgb(220,10,11)" fg:x="379" fg:w="1"/><text x="95.4761%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="95.2261%" y="341" width="0.2513%" height="15" fill="rgb(221,106,17)" fg:x="379" fg:w="1"/><text x="95.4761%" y="351.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.25%)</title><rect x="95.2261%" y="325" width="0.2513%" height="15" fill="rgb(251,142,44)" fg:x="379" fg:w="1"/><text x="95.4761%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.25%)</title><rect x="95.2261%" y="309" width="0.2513%" height="15" fill="rgb(238,13,15)" fg:x="379" fg:w="1"/><text x="95.4761%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.25%)</title><rect x="95.2261%" y="293" width="0.2513%" height="15" fill="rgb(208,107,27)" fg:x="379" fg:w="1"/><text x="95.4761%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.25%)</title><rect x="95.2261%" y="277" width="0.2513%" height="15" fill="rgb(205,136,37)" fg:x="379" fg:w="1"/><text x="95.4761%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.25%)</title><rect x="95.2261%" y="261" width="0.2513%" height="15" fill="rgb(250,205,27)" fg:x="379" fg:w="1"/><text x="95.4761%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.25%)</title><rect x="95.2261%" y="245" width="0.2513%" height="15" fill="rgb(210,80,43)" fg:x="379" fg:w="1"/><text x="95.4761%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.25%)</title><rect x="95.2261%" y="229" width="0.2513%" height="15" fill="rgb(247,160,36)" fg:x="379" fg:w="1"/><text x="95.4761%" y="239.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (1 samples, 0.25%)</title><rect x="95.4774%" y="389" width="0.2513%" height="15" fill="rgb(234,13,49)" fg:x="380" fg:w="1"/><text x="95.7274%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (1 samples, 0.25%)</title><rect x="95.4774%" y="373" width="0.2513%" height="15" fill="rgb(234,122,0)" fg:x="380" fg:w="1"/><text x="95.7274%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.25%)</title><rect x="95.4774%" y="357" width="0.2513%" height="15" fill="rgb(207,146,38)" fg:x="380" fg:w="1"/><text x="95.7274%" y="367.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (1 samples, 0.25%)</title><rect x="95.7286%" y="389" width="0.2513%" height="15" fill="rgb(207,177,25)" fg:x="381" fg:w="1"/><text x="95.9786%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::init_tracker::texture::TextureInitRange&gt;&gt; (1 samples, 0.25%)</title><rect x="95.7286%" y="373" width="0.2513%" height="15" fill="rgb(211,178,42)" fg:x="381" fg:w="1"/><text x="95.9786%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::init_tracker::texture::TextureInitRange&gt;&gt; (1 samples, 0.25%)</title><rect x="95.7286%" y="357" width="0.2513%" height="15" fill="rgb(230,69,54)" fg:x="381" fg:w="1"/><text x="95.9786%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="95.7286%" y="341" width="0.2513%" height="15" fill="rgb(214,135,41)" fg:x="381" fg:w="1"/><text x="95.9786%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.25%)</title><rect x="95.7286%" y="325" width="0.2513%" height="15" fill="rgb(237,67,25)" fg:x="381" fg:w="1"/><text x="95.9786%" y="335.50"></text></g><g><title>wgpu_core::device::life::ResourceMaps&lt;A&gt;::clear (1 samples, 0.25%)</title><rect x="95.9799%" y="389" width="0.2513%" height="15" fill="rgb(222,189,50)" fg:x="382" fg:w="1"/><text x="96.2299%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.25%)</title><rect x="95.9799%" y="373" width="0.2513%" height="15" fill="rgb(245,148,34)" fg:x="382" fg:w="1"/><text x="96.2299%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.25%)</title><rect x="95.9799%" y="357" width="0.2513%" height="15" fill="rgb(222,29,6)" fg:x="382" fg:w="1"/><text x="96.2299%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.25%)</title><rect x="95.9799%" y="341" width="0.2513%" height="15" fill="rgb(221,189,43)" fg:x="382" fg:w="1"/><text x="96.2299%" y="351.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected_bind_groups (1 samples, 0.25%)</title><rect x="96.2312%" y="357" width="0.2513%" height="15" fill="rgb(207,36,27)" fg:x="383" fg:w="1"/><text x="96.4812%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.25%)</title><rect x="96.2312%" y="341" width="0.2513%" height="15" fill="rgb(217,90,24)" fg:x="383" fg:w="1"/><text x="96.4812%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.25%)</title><rect x="96.2312%" y="325" width="0.2513%" height="15" fill="rgb(224,66,35)" fg:x="383" fg:w="1"/><text x="96.4812%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.25%)</title><rect x="96.2312%" y="309" width="0.2513%" height="15" fill="rgb(221,13,50)" fg:x="383" fg:w="1"/><text x="96.4812%" y="319.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected_bind_groups::_{{closure}} (1 samples, 0.25%)</title><rect x="96.2312%" y="293" width="0.2513%" height="15" fill="rgb(236,68,49)" fg:x="383" fg:w="1"/><text x="96.4812%" y="303.50"></text></g><g><title>wgpu_core::track::stateless::StatelessBindGroupSate&lt;Id,T&gt;::drain_resources (1 samples, 0.25%)</title><rect x="96.2312%" y="277" width="0.2513%" height="15" fill="rgb(229,146,28)" fg:x="383" fg:w="1"/><text x="96.4812%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.25%)</title><rect x="96.2312%" y="261" width="0.2513%" height="15" fill="rgb(225,31,38)" fg:x="383" fg:w="1"/><text x="96.4812%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="96.2312%" y="245" width="0.2513%" height="15" fill="rgb(250,208,3)" fg:x="383" fg:w="1"/><text x="96.4812%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.25%)</title><rect x="96.2312%" y="229" width="0.2513%" height="15" fill="rgb(246,54,23)" fg:x="383" fg:w="1"/><text x="96.4812%" y="239.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (2 samples, 0.50%)</title><rect x="96.2312%" y="373" width="0.5025%" height="15" fill="rgb(243,76,11)" fg:x="383" fg:w="2"/><text x="96.4812%" y="383.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected_buffers (1 samples, 0.25%)</title><rect x="96.4824%" y="357" width="0.2513%" height="15" fill="rgb(245,21,50)" fg:x="384" fg:w="1"/><text x="96.7324%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="96.4824%" y="341" width="0.2513%" height="15" fill="rgb(228,9,43)" fg:x="384" fg:w="1"/><text x="96.7324%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="96.4824%" y="325" width="0.2513%" height="15" fill="rgb(208,100,47)" fg:x="384" fg:w="1"/><text x="96.7324%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;&gt;]&gt; (1 samples, 0.25%)</title><rect x="96.4824%" y="309" width="0.2513%" height="15" fill="rgb(232,26,8)" fg:x="384" fg:w="1"/><text x="96.7324%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (1 samples, 0.25%)</title><rect x="96.4824%" y="293" width="0.2513%" height="15" fill="rgb(216,166,38)" fg:x="384" fg:w="1"/><text x="96.7324%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="96.4824%" y="277" width="0.2513%" height="15" fill="rgb(251,202,51)" fg:x="384" fg:w="1"/><text x="96.7324%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.25%)</title><rect x="96.4824%" y="261" width="0.2513%" height="15" fill="rgb(254,216,34)" fg:x="384" fg:w="1"/><text x="96.7324%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.25%)</title><rect x="96.4824%" y="245" width="0.2513%" height="15" fill="rgb(251,32,27)" fg:x="384" fg:w="1"/><text x="96.7324%" y="255.50"></text></g><g><title>&lt;wgpu_core::resource::Buffer&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.25%)</title><rect x="96.4824%" y="229" width="0.2513%" height="15" fill="rgb(208,127,28)" fg:x="384" fg:w="1"/><text x="96.7324%" y="239.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (1 samples, 0.25%)</title><rect x="96.4824%" y="213" width="0.2513%" height="15" fill="rgb(224,137,22)" fg:x="384" fg:w="1"/><text x="96.7324%" y="223.50"></text></g><g><title>ash::device::Device::destroy_buffer (1 samples, 0.25%)</title><rect x="96.4824%" y="197" width="0.2513%" height="15" fill="rgb(254,70,32)" fg:x="384" fg:w="1"/><text x="96.7324%" y="207.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="96.4824%" y="181" width="0.2513%" height="15" fill="rgb(229,75,37)" fg:x="384" fg:w="1"/><text x="96.7324%" y="191.50"></text></g><g><title>wgpu_core::device::resource::Device&lt;A&gt;::maintain (3 samples, 0.75%)</title><rect x="96.2312%" y="389" width="0.7538%" height="15" fill="rgb(252,64,23)" fg:x="383" fg:w="3"/><text x="96.4812%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (1 samples, 0.25%)</title><rect x="96.7337%" y="373" width="0.2513%" height="15" fill="rgb(232,162,48)" fg:x="385" fg:w="1"/><text x="96.9837%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::Fence::get_latest (1 samples, 0.25%)</title><rect x="96.7337%" y="357" width="0.2513%" height="15" fill="rgb(246,160,12)" fg:x="385" fg:w="1"/><text x="96.9837%" y="367.50"></text></g><g><title>ash::device::Device::get_semaphore_counter_value (1 samples, 0.25%)</title><rect x="96.7337%" y="341" width="0.2513%" height="15" fill="rgb(247,166,0)" fg:x="385" fg:w="1"/><text x="96.9837%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="96.7337%" y="325" width="0.2513%" height="15" fill="rgb(249,219,21)" fg:x="385" fg:w="1"/><text x="96.9837%" y="335.50"></text></g><g><title>pollster::block_on (76 samples, 19.10%)</title><rect x="78.1407%" y="501" width="19.0955%" height="15" fill="rgb(205,209,3)" fg:x="311" fg:w="76"/><text x="78.3907%" y="511.50">pollster::block_on</text></g><g><title>complex_vis::gpu::SDF2Constructor::run::_{{closure}} (76 samples, 19.10%)</title><rect x="78.1407%" y="485" width="19.0955%" height="15" fill="rgb(243,44,1)" fg:x="311" fg:w="76"/><text x="78.3907%" y="495.50">complex_vis::gpu::SDF2Construc..</text></g><g><title>complex_vis::gpu::SDFCompute::run_shader::_{{closure}} (76 samples, 19.10%)</title><rect x="78.1407%" y="469" width="19.0955%" height="15" fill="rgb(206,159,16)" fg:x="311" fg:w="76"/><text x="78.3907%" y="479.50">complex_vis::gpu::SDFCompute::..</text></g><g><title>wgpu::Queue::submit (13 samples, 3.27%)</title><rect x="93.9698%" y="453" width="3.2663%" height="15" fill="rgb(244,77,30)" fg:x="374" fg:w="13"/><text x="94.2198%" y="463.50">wgp..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (13 samples, 3.27%)</title><rect x="93.9698%" y="437" width="3.2663%" height="15" fill="rgb(218,69,12)" fg:x="374" fg:w="13"/><text x="94.2198%" y="447.50">&lt;T ..</text></g><g><title>&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_submit (13 samples, 3.27%)</title><rect x="93.9698%" y="421" width="3.2663%" height="15" fill="rgb(212,87,7)" fg:x="374" fg:w="13"/><text x="94.2198%" y="431.50">&lt;wg..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (13 samples, 3.27%)</title><rect x="93.9698%" y="405" width="3.2663%" height="15" fill="rgb(245,114,25)" fg:x="374" fg:w="13"/><text x="94.2198%" y="415.50">wgp..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.25%)</title><rect x="96.9849%" y="389" width="0.2513%" height="15" fill="rgb(210,61,42)" fg:x="386" fg:w="1"/><text x="97.2349%" y="399.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.25%)</title><rect x="96.9849%" y="373" width="0.2513%" height="15" fill="rgb(211,52,33)" fg:x="386" fg:w="1"/><text x="97.2349%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="96.9849%" y="357" width="0.2513%" height="15" fill="rgb(234,58,33)" fg:x="386" fg:w="1"/><text x="97.2349%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="96.9849%" y="341" width="0.2513%" height="15" fill="rgb(220,115,36)" fg:x="386" fg:w="1"/><text x="97.2349%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="96.9849%" y="325" width="0.2513%" height="15" fill="rgb(243,153,54)" fg:x="386" fg:w="1"/><text x="97.2349%" y="335.50"></text></g><g><title>complex_vis::main (313 samples, 78.64%)</title><rect x="18.8442%" y="517" width="78.6432%" height="15" fill="rgb(251,47,18)" fg:x="75" fg:w="313"/><text x="19.0942%" y="527.50">complex_vis::main</text></g><g><title>std::io::stdio::_print (1 samples, 0.25%)</title><rect x="97.2362%" y="501" width="0.2513%" height="15" fill="rgb(242,102,42)" fg:x="387" fg:w="1"/><text x="97.4862%" y="511.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.25%)</title><rect x="97.2362%" y="485" width="0.2513%" height="15" fill="rgb(234,31,38)" fg:x="387" fg:w="1"/><text x="97.4862%" y="495.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.25%)</title><rect x="97.2362%" y="469" width="0.2513%" height="15" fill="rgb(221,117,51)" fg:x="387" fg:w="1"/><text x="97.4862%" y="479.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.25%)</title><rect x="97.2362%" y="453" width="0.2513%" height="15" fill="rgb(212,20,18)" fg:x="387" fg:w="1"/><text x="97.4862%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.25%)</title><rect x="97.2362%" y="437" width="0.2513%" height="15" fill="rgb(245,133,36)" fg:x="387" fg:w="1"/><text x="97.4862%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.25%)</title><rect x="97.2362%" y="421" width="0.2513%" height="15" fill="rgb(212,6,19)" fg:x="387" fg:w="1"/><text x="97.4862%" y="431.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.25%)</title><rect x="97.2362%" y="405" width="0.2513%" height="15" fill="rgb(218,1,36)" fg:x="387" fg:w="1"/><text x="97.4862%" y="415.50"></text></g><g><title>XStringToKeysym (1 samples, 0.25%)</title><rect x="97.7387%" y="453" width="0.2513%" height="15" fill="rgb(246,84,54)" fg:x="389" fg:w="1"/><text x="97.9887%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="97.7387%" y="437" width="0.2513%" height="15" fill="rgb(242,110,6)" fg:x="389" fg:w="1"/><text x="97.9887%" y="447.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.25%)</title><rect x="97.9899%" y="453" width="0.2513%" height="15" fill="rgb(214,47,5)" fg:x="390" fg:w="1"/><text x="98.2399%" y="463.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.25%)</title><rect x="97.9899%" y="437" width="0.2513%" height="15" fill="rgb(218,159,25)" fg:x="390" fg:w="1"/><text x="98.2399%" y="447.50"></text></g><g><title>_IO_getc (1 samples, 0.25%)</title><rect x="97.9899%" y="421" width="0.2513%" height="15" fill="rgb(215,211,28)" fg:x="390" fg:w="1"/><text x="98.2399%" y="431.50"></text></g><g><title>_XOpenLC (1 samples, 0.25%)</title><rect x="98.2412%" y="437" width="0.2513%" height="15" fill="rgb(238,59,32)" fg:x="391" fg:w="1"/><text x="98.4912%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="98.2412%" y="421" width="0.2513%" height="15" fill="rgb(226,82,3)" fg:x="391" fg:w="1"/><text x="98.4912%" y="431.50"></text></g><g><title>_XimOpenIM (5 samples, 1.26%)</title><rect x="97.4874%" y="501" width="1.2563%" height="15" fill="rgb(240,164,32)" fg:x="388" fg:w="5"/><text x="97.7374%" y="511.50"></text></g><g><title>_XimLocalOpenIM (5 samples, 1.26%)</title><rect x="97.4874%" y="485" width="1.2563%" height="15" fill="rgb(232,46,7)" fg:x="388" fg:w="5"/><text x="97.7374%" y="495.50"></text></g><g><title>[libX11.so.6.4.0] (5 samples, 1.26%)</title><rect x="97.4874%" y="469" width="1.2563%" height="15" fill="rgb(229,129,53)" fg:x="388" fg:w="5"/><text x="97.7374%" y="479.50"></text></g><g><title>_Xlcmbstowcs (2 samples, 0.50%)</title><rect x="98.2412%" y="453" width="0.5025%" height="15" fill="rgb(234,188,29)" fg:x="391" fg:w="2"/><text x="98.4912%" y="463.50"></text></g><g><title>_XlcOpenConverter (1 samples, 0.25%)</title><rect x="98.4925%" y="437" width="0.2513%" height="15" fill="rgb(246,141,4)" fg:x="392" fg:w="1"/><text x="98.7425%" y="447.50"></text></g><g><title>_XrmInternalStringToQuark (1 samples, 0.25%)</title><rect x="98.4925%" y="421" width="0.2513%" height="15" fill="rgb(229,23,39)" fg:x="392" fg:w="1"/><text x="98.7425%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="98.4925%" y="405" width="0.2513%" height="15" fill="rgb(206,12,3)" fg:x="392" fg:w="1"/><text x="98.7425%" y="415.50"></text></g><g><title>minifb::os::posix::x11::Window::new (6 samples, 1.51%)</title><rect x="97.4874%" y="517" width="1.5075%" height="15" fill="rgb(252,226,20)" fg:x="388" fg:w="6"/><text x="97.7374%" y="527.50"></text></g><g><title>minifb::os::posix::x11::DisplayInfo::new (1 samples, 0.25%)</title><rect x="98.7437%" y="501" width="0.2513%" height="15" fill="rgb(216,123,35)" fg:x="393" fg:w="1"/><text x="98.9937%" y="511.50"></text></g><g><title>minifb::os::posix::x11::DisplayInfo::setup (1 samples, 0.25%)</title><rect x="98.7437%" y="485" width="0.2513%" height="15" fill="rgb(212,68,40)" fg:x="393" fg:w="1"/><text x="98.9937%" y="495.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open (1 samples, 0.25%)</title><rect x="98.7437%" y="469" width="0.2513%" height="15" fill="rgb(254,125,32)" fg:x="393" fg:w="1"/><text x="98.9937%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.25%)</title><rect x="98.7437%" y="453" width="0.2513%" height="15" fill="rgb(253,97,22)" fg:x="393" fg:w="1"/><text x="98.9937%" y="463.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.25%)</title><rect x="98.7437%" y="437" width="0.2513%" height="15" fill="rgb(241,101,14)" fg:x="393" fg:w="1"/><text x="98.9937%" y="447.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.25%)</title><rect x="98.7437%" y="421" width="0.2513%" height="15" fill="rgb(238,103,29)" fg:x="393" fg:w="1"/><text x="98.9937%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.25%)</title><rect x="98.7437%" y="405" width="0.2513%" height="15" fill="rgb(233,195,47)" fg:x="393" fg:w="1"/><text x="98.9937%" y="415.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.25%)</title><rect x="98.7437%" y="389" width="0.2513%" height="15" fill="rgb(246,218,30)" fg:x="393" fg:w="1"/><text x="98.9937%" y="399.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open::_{{closure}} (1 samples, 0.25%)</title><rect x="98.7437%" y="373" width="0.2513%" height="15" fill="rgb(219,145,47)" fg:x="393" fg:w="1"/><text x="98.9937%" y="383.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.25%)</title><rect x="98.7437%" y="357" width="0.2513%" height="15" fill="rgb(243,12,26)" fg:x="393" fg:w="1"/><text x="98.9937%" y="367.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.25%)</title><rect x="98.7437%" y="341" width="0.2513%" height="15" fill="rgb(214,87,16)" fg:x="393" fg:w="1"/><text x="98.9937%" y="351.50"></text></g><g><title>dlopen (1 samples, 0.25%)</title><rect x="98.7437%" y="325" width="0.2513%" height="15" fill="rgb(208,99,42)" fg:x="393" fg:w="1"/><text x="98.9937%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="98.7437%" y="309" width="0.2513%" height="15" fill="rgb(253,99,2)" fg:x="393" fg:w="1"/><text x="98.9937%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="293" width="0.2513%" height="15" fill="rgb(220,168,23)" fg:x="393" fg:w="1"/><text x="98.9937%" y="303.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="98.7437%" y="277" width="0.2513%" height="15" fill="rgb(242,38,24)" fg:x="393" fg:w="1"/><text x="98.9937%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="98.7437%" y="261" width="0.2513%" height="15" fill="rgb(225,182,9)" fg:x="393" fg:w="1"/><text x="98.9937%" y="271.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="245" width="0.2513%" height="15" fill="rgb(243,178,37)" fg:x="393" fg:w="1"/><text x="98.9937%" y="255.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="98.7437%" y="229" width="0.2513%" height="15" fill="rgb(232,139,19)" fg:x="393" fg:w="1"/><text x="98.9937%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="213" width="0.2513%" height="15" fill="rgb(225,201,24)" fg:x="393" fg:w="1"/><text x="98.9937%" y="223.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.25%)</title><rect x="98.7437%" y="197" width="0.2513%" height="15" fill="rgb(221,47,46)" fg:x="393" fg:w="1"/><text x="98.9937%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="181" width="0.2513%" height="15" fill="rgb(249,23,13)" fg:x="393" fg:w="1"/><text x="98.9937%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="165" width="0.2513%" height="15" fill="rgb(219,9,5)" fg:x="393" fg:w="1"/><text x="98.9937%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="149" width="0.2513%" height="15" fill="rgb(254,171,16)" fg:x="393" fg:w="1"/><text x="98.9937%" y="159.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.25%)</title><rect x="98.7437%" y="133" width="0.2513%" height="15" fill="rgb(230,171,20)" fg:x="393" fg:w="1"/><text x="98.9937%" y="143.50"></text></g><g><title>vkCreateInstance (1 samples, 0.25%)</title><rect x="98.9950%" y="517" width="0.2513%" height="15" fill="rgb(210,71,41)" fg:x="394" fg:w="1"/><text x="99.2450%" y="527.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="98.9950%" y="501" width="0.2513%" height="15" fill="rgb(206,173,20)" fg:x="394" fg:w="1"/><text x="99.2450%" y="511.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="98.9950%" y="485" width="0.2513%" height="15" fill="rgb(233,88,34)" fg:x="394" fg:w="1"/><text x="99.2450%" y="495.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="98.9950%" y="469" width="0.2513%" height="15" fill="rgb(223,209,46)" fg:x="394" fg:w="1"/><text x="99.2450%" y="479.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="98.9950%" y="453" width="0.2513%" height="15" fill="rgb(250,43,18)" fg:x="394" fg:w="1"/><text x="99.2450%" y="463.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="98.9950%" y="437" width="0.2513%" height="15" fill="rgb(208,13,10)" fg:x="394" fg:w="1"/><text x="99.2450%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="98.9950%" y="421" width="0.2513%" height="15" fill="rgb(212,200,36)" fg:x="394" fg:w="1"/><text x="99.2450%" y="431.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.25%)</title><rect x="98.9950%" y="405" width="0.2513%" height="15" fill="rgb(225,90,30)" fg:x="394" fg:w="1"/><text x="99.2450%" y="415.50"></text></g><g><title>[libexpat.so.1.9.0] (1 samples, 0.25%)</title><rect x="98.9950%" y="389" width="0.2513%" height="15" fill="rgb(236,182,39)" fg:x="394" fg:w="1"/><text x="99.2450%" y="399.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="99.2462%" y="437" width="0.2513%" height="15" fill="rgb(212,144,35)" fg:x="395" fg:w="1"/><text x="99.4962%" y="447.50"></text></g><g><title>[libvulkan.so.1.3.276] (1 samples, 0.25%)</title><rect x="99.2462%" y="421" width="0.2513%" height="15" fill="rgb(228,63,44)" fg:x="395" fg:w="1"/><text x="99.4962%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.2462%" y="405" width="0.2513%" height="15" fill="rgb(228,109,6)" fg:x="395" fg:w="1"/><text x="99.4962%" y="415.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.2462%" y="389" width="0.2513%" height="15" fill="rgb(238,117,24)" fg:x="395" fg:w="1"/><text x="99.4962%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.2462%" y="373" width="0.2513%" height="15" fill="rgb(242,26,26)" fg:x="395" fg:w="1"/><text x="99.4962%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.2462%" y="357" width="0.2513%" height="15" fill="rgb(221,92,48)" fg:x="395" fg:w="1"/><text x="99.4962%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.2462%" y="341" width="0.2513%" height="15" fill="rgb(209,209,32)" fg:x="395" fg:w="1"/><text x="99.4962%" y="351.50"></text></g><g><title>cfree (1 samples, 0.25%)</title><rect x="99.2462%" y="325" width="0.2513%" height="15" fill="rgb(221,70,22)" fg:x="395" fg:w="1"/><text x="99.4962%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.2462%" y="309" width="0.2513%" height="15" fill="rgb(248,145,5)" fg:x="395" fg:w="1"/><text x="99.4962%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.2462%" y="293" width="0.2513%" height="15" fill="rgb(226,116,26)" fg:x="395" fg:w="1"/><text x="99.4962%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.2462%" y="277" width="0.2513%" height="15" fill="rgb(244,5,17)" fg:x="395" fg:w="1"/><text x="99.4962%" y="287.50"></text></g><g><title>[unknown] (343 samples, 86.18%)</title><rect x="13.5678%" y="533" width="86.1809%" height="15" fill="rgb(252,159,33)" fg:x="54" fg:w="343"/><text x="13.8178%" y="543.50">[unknown]</text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device_and_queue (2 samples, 0.50%)</title><rect x="99.2462%" y="517" width="0.5025%" height="15" fill="rgb(206,71,0)" fg:x="395" fg:w="2"/><text x="99.4962%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (2 samples, 0.50%)</title><rect x="99.2462%" y="501" width="0.5025%" height="15" fill="rgb(233,118,54)" fg:x="395" fg:w="2"/><text x="99.4962%" y="511.50"></text></g><g><title>ash::instance::Instance::create_device (2 samples, 0.50%)</title><rect x="99.2462%" y="485" width="0.5025%" height="15" fill="rgb(234,83,48)" fg:x="395" fg:w="2"/><text x="99.4962%" y="495.50"></text></g><g><title>vkCreateDevice (2 samples, 0.50%)</title><rect x="99.2462%" y="469" width="0.5025%" height="15" fill="rgb(228,3,54)" fg:x="395" fg:w="2"/><text x="99.4962%" y="479.50"></text></g><g><title>[libvulkan.so.1.3.276] (2 samples, 0.50%)</title><rect x="99.2462%" y="453" width="0.5025%" height="15" fill="rgb(226,155,13)" fg:x="395" fg:w="2"/><text x="99.4962%" y="463.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.4975%" y="437" width="0.2513%" height="15" fill="rgb(241,28,37)" fg:x="396" fg:w="1"/><text x="99.7475%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.25%)</title><rect x="99.4975%" y="421" width="0.2513%" height="15" fill="rgb(233,93,10)" fg:x="396" fg:w="1"/><text x="99.7475%" y="431.50"></text></g><g><title>all (398 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(225,113,19)" fg:x="0" fg:w="398"/><text x="0.2500%" y="575.50"></text></g><g><title>complex-vis (398 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(241,2,18)" fg:x="0" fg:w="398"/><text x="0.2500%" y="559.50">complex-vis</text></g><g><title>_start (1 samples, 0.25%)</title><rect x="99.7487%" y="533" width="0.2513%" height="15" fill="rgb(228,207,21)" fg:x="397" fg:w="1"/><text x="99.9987%" y="543.50"></text></g><g><title>__libc_start_main (1 samples, 0.25%)</title><rect x="99.7487%" y="517" width="0.2513%" height="15" fill="rgb(213,211,35)" fg:x="397" fg:w="1"/><text x="99.9987%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.7487%" y="501" width="0.2513%" height="15" fill="rgb(209,83,10)" fg:x="397" fg:w="1"/><text x="99.9987%" y="511.50"></text></g><g><title>exit (1 samples, 0.25%)</title><rect x="99.7487%" y="485" width="0.2513%" height="15" fill="rgb(209,164,1)" fg:x="397" fg:w="1"/><text x="99.9987%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.25%)</title><rect x="99.7487%" y="469" width="0.2513%" height="15" fill="rgb(213,184,43)" fg:x="397" fg:w="1"/><text x="99.9987%" y="479.50"></text></g><g><title>[libLLVM-16.so] (1 samples, 0.25%)</title><rect x="99.7487%" y="453" width="0.2513%" height="15" fill="rgb(231,61,34)" fg:x="397" fg:w="1"/><text x="99.9987%" y="463.50"></text></g></svg></svg>